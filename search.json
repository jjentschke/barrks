[{"path":"/articles/bso.html","id":"bso-specific-plots","dir":"Articles","previous_headings":"","what":"BSO-specific plots","title":"The BSO model","text":"bso_phenology() returns detailed result phenology(), functions available illustration. stage diagram illustrates share total individuals specific developmental stage. BSO stage diagram (generation ‘0’ represents hibernating beetles) flight diagram shows relative flight activity specific date. BSO flight diagram (colors describe generation flies establish new filial generation sister brood respectively)","code":"bso_plot_stage_diagram(pheno_bso, 234) bso_plot_flight_diagram(pheno_bso, 234)"},{"path":"/articles/bso.html","id":"standard-outputs","dir":"Articles","previous_headings":"","what":"Standard outputs","title":"The BSO model","text":"bso_translate_phenology() possible translate BSO-specific phenology form corresponds output phenology(). makes possible use functions available analyse phenology objects. Generations calculated BSO model","code":"pheno_translated <- bso_translate_phenology(pheno_bso)  dates <- c('2015-04-15', '2015-06-15', '2015-08-15', '2015-10-15') get_generations_rst(pheno_translated, dates) %>% my_rst_plot()"},{"path":"/articles/model-comparison.html","id":"calculate-phenology","dir":"Articles","previous_headings":"","what":"Calculate phenology","title":"Example: Model comparison","text":"vignette, sample data delivered barrks used calculate phenology models available package. Note daylength threshold diapause initiation Jönsson model adapted Central Europe Baier, Pennerstorfer, Schopf (2007).","code":"data <- barrks_data()  # calculate phenology phenos <- list('phenips-clim' = phenology('phenips-clim', data),                'phenips' = phenology('phenips', data),                'rity' = phenology('rity', data),                'lange' = phenology('lange', data),                # customize the Jönsson model for Central Europe                'joensson' = phenology(model('joensson', daylength_dia = 14.5), data),                'bso' = bso_phenology(.data = data) %>% bso_translate_phenology(),                'chapy' = phenology('chapy', data))"},{"path":"/articles/model-comparison.html","id":"spatial-outputs","dir":"Articles","previous_headings":"","what":"Spatial outputs","title":"Example: Model comparison","text":"barrks provides different functions examine results phenology calculations. section describes application basic functions return spatial outputs.","code":""},{"path":"/articles/model-comparison.html","id":"day-of-year-rasters","dir":"Articles","previous_headings":"Spatial outputs","what":"Day-of-year-rasters","title":"Example: Model comparison","text":"onset infestation, initiation diapause frost-induced mortality described corresponding day year. data can attained via get_onset_rst(), get_diapause_rst() get_mortality_rst(). models submodels implemented terra::panel() allow adding empty rasters, workaround-function defined plot respective submodel outputs. Additionally draws borders area interest. Day year infestation begins Day year diapause begins (white cells diapause induced) Day year first frost-induced mortality event autumn (white cells mortality happened)","code":"plot_doy_panel <- function(x) {    aoi <- as.polygons(data[[1]][[1]] * 0)    draw_aoi_borders <- function(i) {      if(empty[i]) polys(aoi, lwd = 2, col = 'white')     else polys(aoi, lwd = 2)   }    # Replace NULL by a raster with values in the overall range to not affect the legend.   # The raster will be overplotted by `draw_aoi_borders()`   rst_tmp <- data[[1]][[1]] * 0 + min(minmax(rast(discard(x, is.null)))[1,])   empty <- map_lgl(x, \\(y) is.null(y))   walk(which(empty), \\(i) x[[i]] <<- rst_tmp)    panel(rast(x),         names(x),         col = viridisLite::viridis(100, direction = -1),         axes = FALSE,         box = TRUE,         loc.main = 'topright',         fun = draw_aoi_borders,         cex.main = 1.9,         plg = list(cex = 1.8)) }  plot_doy_panel(map(phenos, \\(p) get_onset_rst(p))) plot_doy_panel(map(phenos, \\(p) get_diapause_rst(p))) plot_doy_panel(map(phenos, \\(p) get_mortality_rst(p)[[1]]))"},{"path":"/articles/model-comparison.html","id":"generations","dir":"Articles","previous_headings":"Spatial outputs","what":"Generations","title":"Example: Model comparison","text":"get overview establishment generations, possible plot prevailing generations different dates using get_generations_rst() my_rst_plot(). Generations calculated PHENIPS-CLIM Generations calculated PHENIPS Generations calculated RITY Generations calculated Lange model Generations calculated Jönsson model Generations calculated BSO model Generations calculated CHAPY","code":"# dates to plot dates <- c('2015-04-15', '2015-06-15', '2015-08-15', '2015-10-15')  # walk through all phenology models walk(names(phenos), \\(key) {    p <- phenos[[key]]    # plot generations of current model   get_generations_rst(p, dates) %>% my_rst_plot(main = paste0(key, '-', dates)) })"},{"path":"/articles/model-comparison.html","id":"stationwise-outputs","dir":"Articles","previous_headings":"","what":"Stationwise outputs","title":"Example: Model comparison","text":"plot development diagrams particular raster cells, stations can defined specifying cell numbers. get stations’ coordinates, terra::xyFromCell can used. Stations map stations passed plot_development_diagram() get desired plots. , models PHENIPS-Clim PHENIPS plotted reduce complexity diagrams. Development diagram station 1 Development diagram station 2","code":"# plot the locations of the stations  rst_aoi <- data[[1]][[1]] * 0 stations <- c(Station_1 = 234, Station_2 = 345) station_coords <- vect(xyFromCell(rst_aoi, stations))  plot(rst_aoi,  col = '#AAAAAA', legend = FALSE, axes = FALSE, box = TRUE) plot(station_coords, col = 'red', pch = 4, add = TRUE) text(station_coords, names(stations), col = 'black', pos = 2) # plot the development diagrams  limits <- as.Date(c('2015-04-01', '2015-12-31'))  models <- c('phenips-clim', 'phenips')  walk(1:length(stations), \\(i) {   plot_development_diagram(phenos[models],                            stations[i],                            .lty = 1:length(models),                            xlim = limits) })"},{"path":"/articles/model-customization.html","id":"customize-and-combine-models","dir":"Articles","previous_headings":"","what":"Customize and combine models","title":"Model customization","text":"modify parameters individual models new values passed model(). sample PHENIPS customized setting daylength threshold diapause submodel 14 hours. parameters available customization found model customization manuals listed model() manual. combine individual submodels, model_combine() used. parameters, individual models listed. combine model specific submodel, pass list keys model submodels. sample PHENIPS combined diapause submodel PHENIPS-Clim. compare model outputs, prevailing generations calculated models plotted four different dates. Generations calculated PHENIPS without modifications Generations calculated customized PHENIPS Generations calculated PHENIPS combined diapause submodel PHENIPS-Clim","code":"# calculate phenology with a customized model model_custom <- model('phenips', daylength_dia = 14) pheno_custom <- phenology(model_custom, data)  # calculate phenology with a combined model model_combined <- model_combine('phenips',                                 list(model = 'phenips-clim',                                      submodels = 'diapause')) pheno_combined <- phenology(model_combined, data)  # plot generations dates <- c('2015-04-15', '2015-06-15', '2015-08-15', '2015-10-15') get_generations_rst(pheno_std, dates) %>% my_rst_plot() get_generations_rst(pheno_custom, dates) %>% my_rst_plot() get_generations_rst(pheno_combined, dates) %>% my_rst_plot()"},{"path":"/articles/model-customization.html","id":"create-onset-diapause-or-mortality-events-manually","dir":"Articles","previous_headings":"","what":"Create onset, diapause or mortality events manually","title":"Model customization","text":"create phenological events manually, create_onset(), create_diapause() create_mortality() used. functions return multi-layer SpatRasters can used .onset, .diapause .mortality parameter phenology(). instance, practice can used implement personal observations. example, PHENIPS-Clim applied station data delivered barrks onset set May 1st. results plotted development diagram without sister broods keep simple. Development diagram PHENIPS manually created onset","code":"# calculate phenology without modification for comparison pheno_std <- phenology('phenips-clim', barrks_data('stations'))  # calculate phenology with a manually created onset onset <- create_onset(barrks_data('stations'), c(Freiburg = yday('2011-05-01'))) pheno_manual <- phenology('phenips-clim', barrks_data('stations'), .onset = onset)  # plot for comparison plot_development_diagram(list(default = pheno_std, manual = pheno_manual),                          xlim = as.Date(c('2011-03-01', '2011-12-31')),                          .generations = prop_filial_generations(pheno_std),                          .lty = c(2, 1),                          .lwd = 4,                          .legend_lty = list(lwd = 2),                          .group = FALSE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakob Jentschke. Author, maintainer. FVA BW, Abt. Waldschutz. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jentschke J (2024). barrks: Calculate Bark Beetle Phenology Using Different Models. https://jjentschke.github.io/barrks/, https://github.com/jjentschke/barrks.","code":"@Manual{,   title = {barrks: Calculate Bark Beetle Phenology Using Different Models},   author = {Jakob Jentschke},   year = {2024},   note = {https://jjentschke.github.io/barrks/, https://github.com/jjentschke/barrks}, }"},{"path":"/index.html","id":"barrks","dir":"","previous_headings":"","what":"Calculate Bark Beetle Phenology Using Different Models","title":"Calculate Bark Beetle Phenology Using Different Models","text":"goal barrks (bark beetle raster kit seasonal development) calculate phenological development bark beetles. Rather implementing one specific model, package provides collection different models can chosen. Additionally, models can customized combined create individual model. calculations can done spatially explicit using raster inputs, based station inputs available data frames. Even though implemented models describe phenology Ips typographus, package limited particular bark beetle species. instance, CHAPY models phenology Pityogenes chalcographus package may extended models additional bark beetle species. full documentation barrks can found . following table lists models implemented package.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Bark Beetle Phenology Using Different Models","text":"development version barrks can installed GitHub: barrks published CRAN soon.","code":"devtools::install_github(\"jjentschke/barrks\")"},{"path":"/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic Example","title":"Calculate Bark Beetle Phenology Using Different Models","text":"barrks comes sample data used . phenology calculated phenology() takes necessary inputs arguments. Subsequently, rasters emerged generations date can retrieved get_generations_rst(). terra::plot() can used visualize rasters. Generations plot barrks makes easy plot development individual generations. illustrate , “shaded” variant phenology calculated development diagram specific cell (called “station” barrks) plotted bith phenology variants. Development diagram","code":"library(barrks) library(tidyverse) library(terra)   # calculate phenology pheno <- phenology('phenips-clim', barrks_data())  # plot number of prevailing generations on 4 different dates dates <- c('2015-04-15', '2015-06-15', '2015-08-15', '2015-10-15') get_generations_rst(pheno, dates) %>% plot(mar = c(0.2, 0.1, 2, 5),                                            axes = FALSE, box = TRUE, nr = 1,                                            cex.main = 1.9, plg = list(cex = 1.8)) pheno_shaded <- phenology('phenips-clim', barrks_data(), exposure = 'shaded')  plot_development_diagram(list(pheno, pheno_shaded),                          stations_create('Example', 234),                          .legend_lty = FALSE,                          xlim = as.Date(c('2015-04-01', '2015-12-31')))"},{"path":[]},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/analyse.phenology.bso.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse a BSO generated phenology — analyse.phenology.bso","title":"Analyse a BSO generated phenology — analyse.phenology.bso","text":", functions listed available analyse results bso_phenology() call.","code":""},{"path":"/reference/analyse.phenology.bso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyse a BSO generated phenology — analyse.phenology.bso","text":"Get BSO phenology properties: prop_dates() prop_filial_generations() prop_first_date() prop_hatched_generations() prop_last_date() prop_sister_broods() prop_stations() prop_year() Get BSO phenology results (raster-based): bso_get_flight_rst() bso_get_individuals_rst() Get BSO phenology results (station-based): bso_get_flight_df() bso_get_individuals_df() Plot BSO phenology results (station-based): bso_plot_flight_diagram() bso_plot_stage_diagram()","code":""},{"path":[]},{"path":"/reference/analyse.phenology.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse a phenology — analyse.phenology","title":"Analyse a phenology — analyse.phenology","text":", functions listed available analyse results phenology()-call.","code":""},{"path":"/reference/analyse.phenology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyse a phenology — analyse.phenology","text":"Get phenology properties: prop_dates() prop_filial_generations() prop_first_date() prop_hatched_generations() prop_last_date() prop_sister_broods() prop_stations() prop_year() Get phenology results (raster-based): get_development_rst() get_diapause_rst() get_generations_rst() get_hibernating_generations_rst() get_mortality_rst() get_onset_rst() Get phenology results (station-based): get_development_df() get_diapause_df() get_generations_df() get_hibernating_generations_df() get_mortality_df() get_onset_df() Plot phenology results (station-based): plot_development_diagram()","code":""},{"path":[]},{"path":"/reference/barrks-package.html","id":null,"dir":"Reference","previous_headings":"","what":"barrks: Calculate Bark Beetle Phenology Using Different Models — barrks-package","title":"barrks: Calculate Bark Beetle Phenology Using Different Models — barrks-package","text":"Calculate bark beetle phenology based raster data point-related data. models implemented bark beetle species Ips typographus Pityogenes chalcographus. models can customized submodels (onset infestation, beetle development, diapause initiation, mortality) can combined. following models available package: PHENIPS-Clim (first-time release package), PHENIPS (Baier et al. 2007) doi:10.1016/j.foreco.2007.05.020 , RITY (Ogris et al. 2019) doi:10.1016/j.ecolmodel.2019.108775 , CHAPY (Ogris et al. 2020) doi:10.1016/j.ecolmodel.2020.109137 , BSO (Jakoby et al. 2019) doi:10.1111/gcb.14766 , Lange et al. (2006) https://www.researchgate.net/publication/228511956_Thresholds_in_the_life_cycle_of_the_spruce_bark_beetle_under_climate_change, Jönsson et al. (2011) doi:10.1007/s10584-011-0038-4 .","code":""},{"path":[]},{"path":"/reference/barrks-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"barrks: Calculate Bark Beetle Phenology Using Different Models — barrks-package","text":"Maintainer: Jakob Jentschke jakob.jentschke@forst.bwl.de contributors: FVA BW, Abt. Waldschutz waldschutz.fva-bw@forst.bwl.de [copyright holder, funder]","code":""},{"path":"/reference/barrks_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get barrks default color palettes — barrks_colors","title":"Get barrks default color palettes — barrks_colors","text":"Get barrks default color palettes","code":""},{"path":"/reference/barrks_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get barrks default color palettes — barrks_colors","text":"","code":"barrks_colors(type = \"raster\")"},{"path":"/reference/barrks_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get barrks default color palettes — barrks_colors","text":"type Select desired color palette. different variants particular purposes. Allowed values 'raster', 'diagram_lines', 'diagram_fill', 'bso_flight' 'bso_stages'.","code":""},{"path":"/reference/barrks_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get barrks default color palettes — barrks_colors","text":"character vector hex colors.","code":""},{"path":[]},{"path":"/reference/barrks_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get barrks default color palettes — barrks_colors","text":"","code":"colors <- barrks_colors()  # use the colors of 'barrks' for your individual plot..."},{"path":"/reference/barrks_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load sample data — barrks_data","title":"Load sample data — barrks_data","text":"package comes sample data allow application models available. following data sets available:","code":""},{"path":"/reference/barrks_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load sample data — barrks_data","text":"","code":"barrks_data(dataset = \"raster\")"},{"path":"/reference/barrks_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load sample data — barrks_data","text":"https://opendata.dwd.de/climate_environment/CDC/grids_germany/daily/hyras_de/ https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/kl/historical https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/solar","code":""},{"path":"/reference/barrks_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load sample data — barrks_data","text":"dataset Choose data set returned.","code":""},{"path":"/reference/barrks_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load sample data — barrks_data","text":"respective data set. Can list SpatRasters (dataset = 'raster') data frame.","code":""},{"path":"/reference/barrks_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load sample data — barrks_data","text":"raster Contains list raster weather datasets sample area. data taken Deutscher Wetterdienst (DWD). stations Contains sample station weather data cities Germany. data taken Deutscher Wetterdienst (DWD). Missing global radiation values replaced mean value stations. station_coords Contains coordinates (longitude/latitude) stations included stations data set. data taken Deutscher Wetterdienst (DWD).","code":""},{"path":"/reference/barrks_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load sample data — barrks_data","text":"","code":"# \\donttest{ # plot first layer of the minimum temperature of the sample raster data terra::plot(barrks_data()$tmin[[1]])   # print the first lines of the sample station data head(barrks_data('stations'), 10) #> # A tibble: 10 × 9 #>    date       station  tmean  tmin  tmax   rad sunrise sunset daylength #>    <date>     <chr>    <dbl> <dbl> <dbl> <dbl>   <dbl>  <dbl>     <dbl> #>  1 2011-01-01 Freiburg   0.1  -0.4   0.7  228.     499   1006      8.45 #>  2 2011-01-02 Freiburg  -0.1  -3.4   2.2  642.     499   1007      8.47 #>  3 2011-01-03 Freiburg  -3.4  -8.4   0.3 1708.     499   1008      8.48 #>  4 2011-01-04 Freiburg  -3.7  -7.6  -1.4 1194.     499   1009      8.5  #>  5 2011-01-05 Freiburg  -2.2  -6.5   2.4 1639.     499   1010      8.52 #>  6 2011-01-06 Freiburg   7.8  -2.6  12.8  356.     499   1011      8.53 #>  7 2011-01-07 Freiburg  11.5   9.1  14.9  336.     498   1012      8.57 #>  8 2011-01-08 Freiburg  12.8   7.7  16.2  736.     498   1013      8.58 #>  9 2011-01-09 Freiburg   8.7   4    13.3  169.     498   1015      8.62 #> 10 2011-01-10 Freiburg   2.9   1.9   4.1  397.     497   1016      8.65  # print the coordinates of the sample stations barrks_data('station_coords') #> # A tibble: 4 × 3 #>   station     lon   lat #>   <chr>     <dbl> <dbl> #> 1 Freiburg   7.83  48.0 #> 2 Mannheim   8.56  49.5 #> 3 Konstanz   9.13  47.7 #> 4 Stuttgart  9.2   48.8 # }"},{"path":"/reference/barrks_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get barrks default legend labels — barrks_labels","title":"Get barrks default legend labels — barrks_labels","text":"Get barrks default legend labels","code":""},{"path":"/reference/barrks_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get barrks default legend labels — barrks_labels","text":"","code":"barrks_labels(type = \"raster\")"},{"path":"/reference/barrks_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get barrks default legend labels — barrks_labels","text":"type Select desired legend labels. different variants particular purposes. Allowed values 'raster', 'diagram', 'bso_flight' 'bso_stages'.","code":""},{"path":"/reference/barrks_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get barrks default legend labels — barrks_labels","text":"character vector labels.","code":""},{"path":[]},{"path":"/reference/barrks_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get barrks default legend labels — barrks_labels","text":"","code":"labels <- barrks_labels()  # use the labels of 'barrks' for your individual plot..."},{"path":"/reference/bso_get_flight.html","id":null,"dir":"Reference","previous_headings":"","what":"Get flight of individuals (BSO only) — bso_get_flight_rst","title":"Get flight of individuals (BSO only) — bso_get_flight_rst","text":"Get number individuals flying.","code":""},{"path":"/reference/bso_get_flight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get flight of individuals (BSO only) — bso_get_flight_rst","text":"","code":"bso_get_flight_rst(pheno, generation, flight = 1, dates = prop_dates(pheno))  bso_get_flight_df(   pheno,   generation,   stations = prop_stations(pheno),   flight = 1,   dates = prop_dates(pheno) )"},{"path":"/reference/bso_get_flight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get flight of individuals (BSO only) — bso_get_flight_rst","text":"pheno BSO phenology (see bso_phenology()) generation Generation interest. sister broods, 0.5 added. flight Specifies flight respective generation returned. Can 1 (first flight) 2 (second flight). dates Select dates present output. stations Pass character vector choose stations assigned pheno names, pass different stations. See stations_create() details.","code":""},{"path":"/reference/bso_get_flight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get flight of individuals (BSO only) — bso_get_flight_rst","text":"bso_get_flight_rst: multi-layer SpatRaster. bso_get_flight_df: data frame.","code":""},{"path":"/reference/bso_get_flight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get flight of individuals (BSO only) — bso_get_flight_rst","text":"","code":"# \\donttest{ # This may take a few minutes...  # calculate phenology p <- bso_phenology('bso', barrks_data('stations'), .quiet = TRUE)  # get the number of individuals of the hibernating generation on their first flight bso_get_flight_df(p, 0, 'Freiburg', flight = 1) #>      station       date doy   flight #> 1   Freiburg 2011-01-01   1        0 #> 2   Freiburg 2011-01-02   2        0 #> 3   Freiburg 2011-01-03   3        0 #> 4   Freiburg 2011-01-04   4        0 #> 5   Freiburg 2011-01-05   5        0 #> 6   Freiburg 2011-01-06   6        0 #> 7   Freiburg 2011-01-07   7        0 #> 8   Freiburg 2011-01-08   8        0 #> 9   Freiburg 2011-01-09   9        0 #> 10  Freiburg 2011-01-10  10        0 #> 11  Freiburg 2011-01-11  11        0 #> 12  Freiburg 2011-01-12  12        0 #> 13  Freiburg 2011-01-13  13        0 #> 14  Freiburg 2011-01-14  14        0 #> 15  Freiburg 2011-01-15  15        0 #> 16  Freiburg 2011-01-16  16        0 #> 17  Freiburg 2011-01-17  17        0 #> 18  Freiburg 2011-01-18  18        0 #> 19  Freiburg 2011-01-19  19        0 #> 20  Freiburg 2011-01-20  20        0 #> 21  Freiburg 2011-01-21  21        0 #> 22  Freiburg 2011-01-22  22        0 #> 23  Freiburg 2011-01-23  23        0 #> 24  Freiburg 2011-01-24  24        0 #> 25  Freiburg 2011-01-25  25        0 #> 26  Freiburg 2011-01-26  26        0 #> 27  Freiburg 2011-01-27  27        0 #> 28  Freiburg 2011-01-28  28        0 #> 29  Freiburg 2011-01-29  29        0 #> 30  Freiburg 2011-01-30  30        0 #> 31  Freiburg 2011-01-31  31        0 #> 32  Freiburg 2011-02-01  32        0 #> 33  Freiburg 2011-02-02  33        0 #> 34  Freiburg 2011-02-03  34        0 #> 35  Freiburg 2011-02-04  35        0 #> 36  Freiburg 2011-02-05  36        0 #> 37  Freiburg 2011-02-06  37        0 #> 38  Freiburg 2011-02-07  38        0 #> 39  Freiburg 2011-02-08  39        0 #> 40  Freiburg 2011-02-09  40        0 #> 41  Freiburg 2011-02-10  41        0 #> 42  Freiburg 2011-02-11  42        0 #> 43  Freiburg 2011-02-12  43        0 #> 44  Freiburg 2011-02-13  44        0 #> 45  Freiburg 2011-02-14  45        0 #> 46  Freiburg 2011-02-15  46        0 #> 47  Freiburg 2011-02-16  47        0 #> 48  Freiburg 2011-02-17  48        0 #> 49  Freiburg 2011-02-18  49        0 #> 50  Freiburg 2011-02-19  50        0 #> 51  Freiburg 2011-02-20  51        0 #> 52  Freiburg 2011-02-21  52        0 #> 53  Freiburg 2011-02-22  53        0 #> 54  Freiburg 2011-02-23  54        0 #> 55  Freiburg 2011-02-24  55        0 #> 56  Freiburg 2011-02-25  56        0 #> 57  Freiburg 2011-02-26  57        0 #> 58  Freiburg 2011-02-27  58        0 #> 59  Freiburg 2011-02-28  59        0 #> 60  Freiburg 2011-03-01  60        0 #> 61  Freiburg 2011-03-02  61        0 #> 62  Freiburg 2011-03-03  62        0 #> 63  Freiburg 2011-03-04  63        0 #> 64  Freiburg 2011-03-05  64        0 #> 65  Freiburg 2011-03-06  65        0 #> 66  Freiburg 2011-03-07  66        0 #> 67  Freiburg 2011-03-08  67        0 #> 68  Freiburg 2011-03-09  68        0 #> 69  Freiburg 2011-03-10  69        0 #> 70  Freiburg 2011-03-11  70        0 #> 71  Freiburg 2011-03-12  71        0 #> 72  Freiburg 2011-03-13  72        0 #> 73  Freiburg 2011-03-14  73        0 #> 74  Freiburg 2011-03-15  74   243890 #> 75  Freiburg 2011-03-16  75  1435894 #> 76  Freiburg 2011-03-17  76        0 #> 77  Freiburg 2011-03-18  77        0 #> 78  Freiburg 2011-03-19  78        0 #> 79  Freiburg 2011-03-20  79        0 #> 80  Freiburg 2011-03-21  80        0 #> 81  Freiburg 2011-03-22  81        0 #> 82  Freiburg 2011-03-23  82        0 #> 83  Freiburg 2011-03-24  83  4598833 #> 84  Freiburg 2011-03-25  84  7554480 #> 85  Freiburg 2011-03-26  85 17234414 #> 86  Freiburg 2011-03-27  86  2679499 #> 87  Freiburg 2011-03-28  87        0 #> 88  Freiburg 2011-03-29  88        0 #> 89  Freiburg 2011-03-30  89 10012380 #> 90  Freiburg 2011-03-31  90        0 #> 91  Freiburg 2011-04-01  91        0 #> 92  Freiburg 2011-04-02  92 27778474 #> 93  Freiburg 2011-04-03  93 52206087 #> 94  Freiburg 2011-04-04  94 44261028 #> 95  Freiburg 2011-04-05  95        0 #> 96  Freiburg 2011-04-06  96 15750998 #> 97  Freiburg 2011-04-07  97 44214397 #> 98  Freiburg 2011-04-08  98 56413085 #> 99  Freiburg 2011-04-09  99 30647044 #> 100 Freiburg 2011-04-10 100 29912804 #> 101 Freiburg 2011-04-11 101 32790743 #> 102 Freiburg 2011-04-12 102 40066879 #> 103 Freiburg 2011-04-13 103        0 #> 104 Freiburg 2011-04-14 104        0 #> 105 Freiburg 2011-04-15 105        0 #> 106 Freiburg 2011-04-16 106        0 #> 107 Freiburg 2011-04-17 107  1468471 #> 108 Freiburg 2011-04-18 108 10506187 #> 109 Freiburg 2011-04-19 109 26328501 #> 110 Freiburg 2011-04-20 110 30251230 #> 111 Freiburg 2011-04-21 111 33405532 #> 112 Freiburg 2011-04-22 112 34479096 #> 113 Freiburg 2011-04-23 113 33091243 #> 114 Freiburg 2011-04-24 114 33237896 #> 115 Freiburg 2011-04-25 115 23966054 #> 116 Freiburg 2011-04-26 116 24569835 #> 117 Freiburg 2011-04-27 117 13316430 #> 118 Freiburg 2011-04-28 118  6156406 #> 119 Freiburg 2011-04-29 119  8863069 #> 120 Freiburg 2011-04-30 120        0 #> 121 Freiburg 2011-05-01 121  6191441 #> 122 Freiburg 2011-05-02 122 16819751 #> 123 Freiburg 2011-05-03 123  9641741 #> 124 Freiburg 2011-05-04 124        0 #> 125 Freiburg 2011-05-05 125    76185 #> 126 Freiburg 2011-05-06 126  9703019 #> 127 Freiburg 2011-05-07 127 20330908 #> 128 Freiburg 2011-05-08 128 21929250 #> 129 Freiburg 2011-05-09 129 20006666 #> 130 Freiburg 2011-05-10 130 18630387 #> 131 Freiburg 2011-05-11 131 18295767 #> 132 Freiburg 2011-05-12 132 14957915 #> 133 Freiburg 2011-05-13 133  8093248 #> 134 Freiburg 2011-05-14 134  8000151 #> 135 Freiburg 2011-05-15 135  6184208 #> 136 Freiburg 2011-05-16 136        0 #> 137 Freiburg 2011-05-17 137  1141854 #> 138 Freiburg 2011-05-18 138  7107456 #> 139 Freiburg 2011-05-19 139 10787559 #> 140 Freiburg 2011-05-20 140 10384892 #> 141 Freiburg 2011-05-21 141  8783232 #> 142 Freiburg 2011-05-22 142  7899722 #> 143 Freiburg 2011-05-23 143  7675668 #> 144 Freiburg 2011-05-24 144  6123346 #> 145 Freiburg 2011-05-25 145  5771209 #> 146 Freiburg 2011-05-26 146  5180935 #> 147 Freiburg 2011-05-27 147  5505961 #> 148 Freiburg 2011-05-28 148  1308215 #> 149 Freiburg 2011-05-29 149  2288602 #> 150 Freiburg 2011-05-30 150  3982116 #> 151 Freiburg 2011-05-31 151  4336519 #> 152 Freiburg 2011-06-01 152  2686723 #> 153 Freiburg 2011-06-02 153        0 #> 154 Freiburg 2011-06-03 154  2746378 #> 155 Freiburg 2011-06-04 155  3295125 #> 156 Freiburg 2011-06-05 156  2702340 #> 157 Freiburg 2011-06-06 157  2678522 #> 158 Freiburg 2011-06-07 158  1909427 #> 159 Freiburg 2011-06-08 159  1965342 #> 160 Freiburg 2011-06-09 160        0 #> 161 Freiburg 2011-06-10 161   538488 #> 162 Freiburg 2011-06-11 162  1052945 #> 163 Freiburg 2011-06-12 163   753127 #> 164 Freiburg 2011-06-13 164  1228570 #> 165 Freiburg 2011-06-14 165  1067004 #> 166 Freiburg 2011-06-15 166  1223776 #> 167 Freiburg 2011-06-16 167  1231388 #> 168 Freiburg 2011-06-17 168  1142171 #> 169 Freiburg 2011-06-18 169   838856 #> 170 Freiburg 2011-06-19 170   372756 #> 171 Freiburg 2011-06-20 171   394747 #> 172 Freiburg 2011-06-21 172   662316 #> 173 Freiburg 2011-06-22 173   866034 #> 174 Freiburg 2011-06-23 174   671016 #> 175 Freiburg 2011-06-24 175   415990 #> 176 Freiburg 2011-06-25 176   276052 #> 177 Freiburg 2011-06-26 177   357459 #> 178 Freiburg 2011-06-27 178   481570 #> 179 Freiburg 2011-06-28 179   341792 #> 180 Freiburg 2011-06-29 180   292649 #> 181 Freiburg 2011-06-30 181   297250 #> 182 Freiburg 2011-07-01 182   185462 #> 183 Freiburg 2011-07-02 183   108387 #> 184 Freiburg 2011-07-03 184   117418 #> 185 Freiburg 2011-07-04 185   176587 #> 186 Freiburg 2011-07-05 186   225093 #> 187 Freiburg 2011-07-06 187   232441 #> 188 Freiburg 2011-07-07 188   212804 #> 189 Freiburg 2011-07-08 189   164730 #> 190 Freiburg 2011-07-09 190   137748 #> 191 Freiburg 2011-07-10 191   149356 #> 192 Freiburg 2011-07-11 192   101680 #> 193 Freiburg 2011-07-12 193   116777 #> 194 Freiburg 2011-07-13 194   120463 #> 195 Freiburg 2011-07-14 195    76982 #> 196 Freiburg 2011-07-15 196    39064 #> 197 Freiburg 2011-07-16 197    47145 #> 198 Freiburg 2011-07-17 198    71333 #> 199 Freiburg 2011-07-18 199    58022 #> 200 Freiburg 2011-07-19 200    33377 #> 201 Freiburg 2011-07-20 201    33493 #> 202 Freiburg 2011-07-21 202    29626 #> 203 Freiburg 2011-07-22 203    33031 #> 204 Freiburg 2011-07-23 204    34149 #> 205 Freiburg 2011-07-24 205    21709 #> 206 Freiburg 2011-07-25 206      793 #> 207 Freiburg 2011-07-26 207    29153 #> 208 Freiburg 2011-07-27 208    32138 #> 209 Freiburg 2011-07-28 209    30434 #> 210 Freiburg 2011-07-29 210    24923 #> 211 Freiburg 2011-07-30 211    24040 #> 212 Freiburg 2011-07-31 212    16713 #> 213 Freiburg 2011-08-01 213    12613 #> 214 Freiburg 2011-08-02 214    19528 #> 215 Freiburg 2011-08-03 215    23983 #> 216 Freiburg 2011-08-04 216    23057 #> 217 Freiburg 2011-08-05 217    19738 #> 218 Freiburg 2011-08-06 218    15477 #> 219 Freiburg 2011-08-07 219    13579 #> 220 Freiburg 2011-08-08 220     9146 #> 221 Freiburg 2011-08-09 221     6761 #> 222 Freiburg 2011-08-10 222     4890 #> 223 Freiburg 2011-08-11 223     4051 #> 224 Freiburg 2011-08-12 224     8655 #> 225 Freiburg 2011-08-13 225     8788 #> 226 Freiburg 2011-08-14 226     7612 #> 227 Freiburg 2011-08-15 227     7711 #> 228 Freiburg 2011-08-16 228     4979 #> 229 Freiburg 2011-08-17 229     5037 #> 230 Freiburg 2011-08-18 230     5946 #> 231 Freiburg 2011-08-19 231     5436 #> 232 Freiburg 2011-08-20 232     4414 #> 233 Freiburg 2011-08-21 233     4236 #> 234 Freiburg 2011-08-22 234     3461 #> 235 Freiburg 2011-08-23 235     1623 #> 236 Freiburg 2011-08-24 236     2019 #> 237 Freiburg 2011-08-25 237     2798 #> 238 Freiburg 2011-08-26 238     2217 #> 239 Freiburg 2011-08-27 239     1904 #> 240 Freiburg 2011-08-28 240      364 #> 241 Freiburg 2011-08-29 241     1223 #> 242 Freiburg 2011-08-30 242      975 #> 243 Freiburg 2011-08-31 243      804 #> 244 Freiburg 2011-09-01 244     1082 #> 245 Freiburg 2011-09-02 245     1303 #> 246 Freiburg 2011-09-03 246     1165 #> 247 Freiburg 2011-09-04 247     1134 #> 248 Freiburg 2011-09-05 248      766 #> 249 Freiburg 2011-09-06 249      518 #> 250 Freiburg 2011-09-07 250      594 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 115 rows ] # }"},{"path":"/reference/bso_get_individuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get individuals (BSO only) — bso_get_individuals_rst","title":"Get individuals (BSO only) — bso_get_individuals_rst","text":"Get number individuals generation specific development stage.","code":""},{"path":"/reference/bso_get_individuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get individuals (BSO only) — bso_get_individuals_rst","text":"","code":"bso_get_individuals_rst(   pheno,   generation,   stage = \"all\",   dates = prop_dates(pheno) )  bso_get_individuals_df(   pheno,   generation,   stations = prop_stations(pheno),   stage = \"all\",   dates = prop_dates(pheno) )"},{"path":"/reference/bso_get_individuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get individuals (BSO only) — bso_get_individuals_rst","text":"pheno BSO phenology (see bso_phenology()) generation Generation interest. sister broods, 0.5 added. stage numeric, individuals slots specified retrieved. Otherwise one following values: , egg, larva, pupa, white (egg + larva + pupa), maturation, preflight, reproduction, brown (maturation + preflight + reproduction) dates Select dates present output. stations Pass character vector choose stations assigned pheno names, pass different stations. See stations_create() details.","code":""},{"path":"/reference/bso_get_individuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get individuals (BSO only) — bso_get_individuals_rst","text":"bso_get_individuals_rst(): multi-layer SpatRaster. bso_get_individuals(): data frame.","code":""},{"path":"/reference/bso_get_individuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get individuals (BSO only) — bso_get_individuals_rst","text":"","code":"# \\donttest{ # This may take a few minutes...  # calculate phenology p <- bso_phenology('bso', barrks_data('stations'), .quiet = TRUE)  # get the number of individuals of the hibernating generation that are waiting to fly bso_get_individuals_df(p, 0, 'Freiburg', stage = 'preflight') #>      station       date doy individuals #> 1   Freiburg 2011-01-01   1           0 #> 2   Freiburg 2011-01-02   2           0 #> 3   Freiburg 2011-01-03   3           0 #> 4   Freiburg 2011-01-04   4           0 #> 5   Freiburg 2011-01-05   5           0 #> 6   Freiburg 2011-01-06   6           0 #> 7   Freiburg 2011-01-07   7           0 #> 8   Freiburg 2011-01-08   8           0 #> 9   Freiburg 2011-01-09   9           0 #> 10  Freiburg 2011-01-10  10           0 #> 11  Freiburg 2011-01-11  11           0 #> 12  Freiburg 2011-01-12  12           0 #> 13  Freiburg 2011-01-13  13           0 #> 14  Freiburg 2011-01-14  14           0 #> 15  Freiburg 2011-01-15  15           0 #> 16  Freiburg 2011-01-16  16           0 #> 17  Freiburg 2011-01-17  17           0 #> 18  Freiburg 2011-01-18  18           0 #> 19  Freiburg 2011-01-19  19           0 #> 20  Freiburg 2011-01-20  20           0 #> 21  Freiburg 2011-01-21  21           0 #> 22  Freiburg 2011-01-22  22           0 #> 23  Freiburg 2011-01-23  23           0 #> 24  Freiburg 2011-01-24  24           0 #> 25  Freiburg 2011-01-25  25           0 #> 26  Freiburg 2011-01-26  26           0 #> 27  Freiburg 2011-01-27  27           0 #> 28  Freiburg 2011-01-28  28           0 #> 29  Freiburg 2011-01-29  29           0 #> 30  Freiburg 2011-01-30  30           0 #> 31  Freiburg 2011-01-31  31           0 #> 32  Freiburg 2011-02-01  32           0 #> 33  Freiburg 2011-02-02  33           0 #> 34  Freiburg 2011-02-03  34           0 #> 35  Freiburg 2011-02-04  35           0 #> 36  Freiburg 2011-02-05  36           0 #> 37  Freiburg 2011-02-06  37           0 #> 38  Freiburg 2011-02-07  38           0 #> 39  Freiburg 2011-02-08  39           0 #> 40  Freiburg 2011-02-09  40           0 #> 41  Freiburg 2011-02-10  41           0 #> 42  Freiburg 2011-02-11  42           0 #> 43  Freiburg 2011-02-12  43           0 #> 44  Freiburg 2011-02-13  44           0 #> 45  Freiburg 2011-02-14  45           0 #> 46  Freiburg 2011-02-15  46           0 #> 47  Freiburg 2011-02-16  47           0 #> 48  Freiburg 2011-02-17  48           0 #> 49  Freiburg 2011-02-18  49           0 #> 50  Freiburg 2011-02-19  50           0 #> 51  Freiburg 2011-02-20  51           0 #> 52  Freiburg 2011-02-21  52           0 #> 53  Freiburg 2011-02-22  53           0 #> 54  Freiburg 2011-02-23  54           0 #> 55  Freiburg 2011-02-24  55           0 #> 56  Freiburg 2011-02-25  56           0 #> 57  Freiburg 2011-02-26  57           0 #> 58  Freiburg 2011-02-27  58           0 #> 59  Freiburg 2011-02-28  59           0 #> 60  Freiburg 2011-03-01  60           0 #> 61  Freiburg 2011-03-02  61           0 #> 62  Freiburg 2011-03-03  62           0 #> 63  Freiburg 2011-03-04  63           0 #> 64  Freiburg 2011-03-05  64           0 #> 65  Freiburg 2011-03-06  65           0 #> 66  Freiburg 2011-03-07  66           0 #> 67  Freiburg 2011-03-08  67           0 #> 68  Freiburg 2011-03-09  68        4545 #> 69  Freiburg 2011-03-10  69      511650 #> 70  Freiburg 2011-03-11  70     3129777 #> 71  Freiburg 2011-03-12  71     7980534 #> 72  Freiburg 2011-03-13  72    17106085 #> 73  Freiburg 2011-03-14  73    31744481 #> 74  Freiburg 2011-03-15  74    53388984 #> 75  Freiburg 2011-03-16  75    84696288 #> 76  Freiburg 2011-03-17  76   121562858 #> 77  Freiburg 2011-03-18  77   156628398 #> 78  Freiburg 2011-03-19  78   184445447 #> 79  Freiburg 2011-03-20  79   203932471 #> 80  Freiburg 2011-03-21  80   223557867 #> 81  Freiburg 2011-03-22  81   246165379 #> 82  Freiburg 2011-03-23  82   269675260 #> 83  Freiburg 2011-03-24  83   296430094 #> 84  Freiburg 2011-03-25  84   326375249 #> 85  Freiburg 2011-03-26  85   372150172 #> 86  Freiburg 2011-03-27  86   428954029 #> 87  Freiburg 2011-03-28  87   481691466 #> 88  Freiburg 2011-03-29  88   521918239 #> 89  Freiburg 2011-03-30  89   561691173 #> 90  Freiburg 2011-03-31  90   608867992 #> 91  Freiburg 2011-04-01  91   640690343 #> 92  Freiburg 2011-04-02  92   647928525 #> 93  Freiburg 2011-04-03  93   646187507 #> 94  Freiburg 2011-04-04  94   665487388 #> 95  Freiburg 2011-04-05  95   684793640 #> 96  Freiburg 2011-04-06  96   676777558 #> 97  Freiburg 2011-04-07  97   649289641 #> 98  Freiburg 2011-04-08  98   625919245 #> 99  Freiburg 2011-04-09  99   610539078 #> 100 Freiburg 2011-04-10 100   590173031 #> 101 Freiburg 2011-04-11 101   562197959 #> 102 Freiburg 2011-04-12 102   551091284 #> 103 Freiburg 2011-04-13 103   555600333 #> 104 Freiburg 2011-04-14 104   558595296 #> 105 Freiburg 2011-04-15 105   560870895 #> 106 Freiburg 2011-04-16 106   561954025 #> 107 Freiburg 2011-04-17 107   557464477 #> 108 Freiburg 2011-04-18 108   540509359 #> 109 Freiburg 2011-04-19 109   514149123 #> 110 Freiburg 2011-04-20 110   484570006 #> 111 Freiburg 2011-04-21 111   452887543 #> 112 Freiburg 2011-04-22 112   421112594 #> 113 Freiburg 2011-04-23 113   390193629 #> 114 Freiburg 2011-04-24 114   362387718 #> 115 Freiburg 2011-04-25 115   339212045 #> 116 Freiburg 2011-04-26 116   321508346 #> 117 Freiburg 2011-04-27 117   312495380 #> 118 Freiburg 2011-04-28 118   305304859 #> 119 Freiburg 2011-04-29 119   301440428 #> 120 Freiburg 2011-04-30 120   298275473 #> 121 Freiburg 2011-05-01 121   286495566 #> 122 Freiburg 2011-05-02 122   273757434 #> 123 Freiburg 2011-05-03 123   269422388 #> 124 Freiburg 2011-05-04 124   269463584 #> 125 Freiburg 2011-05-05 125   264241453 #> 126 Freiburg 2011-05-06 126   249082473 #> 127 Freiburg 2011-05-07 127   228233975 #> 128 Freiburg 2011-05-08 128   207390909 #> 129 Freiburg 2011-05-09 129   187719043 #> 130 Freiburg 2011-05-10 130   169625924 #> 131 Freiburg 2011-05-11 131   152877217 #> 132 Freiburg 2011-05-12 132   141390116 #> 133 Freiburg 2011-05-13 133   133573522 #> 134 Freiburg 2011-05-14 134   126460435 #> 135 Freiburg 2011-05-15 135   123684244 #> 136 Freiburg 2011-05-16 136   123074111 #> 137 Freiburg 2011-05-17 137   118595187 #> 138 Freiburg 2011-05-18 138   109690531 #> 139 Freiburg 2011-05-19 139    99201647 #> 140 Freiburg 2011-05-20 140    89532245 #> 141 Freiburg 2011-05-21 141    81277986 #> 142 Freiburg 2011-05-22 142    73538829 #> 143 Freiburg 2011-05-23 143    66583562 #> 144 Freiburg 2011-05-24 144    60654298 #> 145 Freiburg 2011-05-25 145    55256747 #> 146 Freiburg 2011-05-26 146    49941884 #> 147 Freiburg 2011-05-27 147    46608833 #> 148 Freiburg 2011-05-28 148    44798271 #> 149 Freiburg 2011-05-29 149    41615810 #> 150 Freiburg 2011-05-30 150    37504912 #> 151 Freiburg 2011-05-31 151    33962639 #> 152 Freiburg 2011-06-01 152    32734375 #> 153 Freiburg 2011-06-02 153    31292896 #> 154 Freiburg 2011-06-03 154    28308066 #> 155 Freiburg 2011-06-04 155    25283508 #> 156 Freiburg 2011-06-05 156    22622733 #> 157 Freiburg 2011-06-06 157    20281359 #> 158 Freiburg 2011-06-07 158    18372391 #> 159 Freiburg 2011-06-08 159    17439561 #> 160 Freiburg 2011-06-09 160    17144259 #> 161 Freiburg 2011-06-10 161    16343474 #> 162 Freiburg 2011-06-11 162    15431583 #> 163 Freiburg 2011-06-12 163    14463605 #> 164 Freiburg 2011-06-13 164    13290130 #> 165 Freiburg 2011-06-14 165    12149545 #> 166 Freiburg 2011-06-15 166    10938433 #> 167 Freiburg 2011-06-16 167     9753795 #> 168 Freiburg 2011-06-17 168     8746556 #> 169 Freiburg 2011-06-18 169     8156766 #> 170 Freiburg 2011-06-19 170     7780537 #> 171 Freiburg 2011-06-20 171     7250937 #> 172 Freiburg 2011-06-21 172     6514620 #> 173 Freiburg 2011-06-22 173     5717744 #> 174 Freiburg 2011-06-23 174     5163466 #> 175 Freiburg 2011-06-24 175     4822319 #> 176 Freiburg 2011-06-25 176     4508948 #> 177 Freiburg 2011-06-26 177     4095721 #> 178 Freiburg 2011-06-27 178     3714592 #> 179 Freiburg 2011-06-28 179     3389059 #> 180 Freiburg 2011-06-29 180     3066589 #> 181 Freiburg 2011-06-30 181     2828500 #> 182 Freiburg 2011-07-01 182     2686014 #> 183 Freiburg 2011-07-02 183     2573436 #> 184 Freiburg 2011-07-03 184     2424203 #> 185 Freiburg 2011-07-04 185     2224028 #> 186 Freiburg 2011-07-05 186     1998831 #> 187 Freiburg 2011-07-06 187     1780695 #> 188 Freiburg 2011-07-07 188     1587060 #> 189 Freiburg 2011-07-08 189     1434656 #> 190 Freiburg 2011-07-09 190     1293139 #> 191 Freiburg 2011-07-10 191     1166067 #> 192 Freiburg 2011-07-11 192     1059289 #> 193 Freiburg 2011-07-12 193      942601 #> 194 Freiburg 2011-07-13 194      840087 #> 195 Freiburg 2011-07-14 195      783631 #> 196 Freiburg 2011-07-15 196      740537 #> 197 Freiburg 2011-07-16 197      682581 #> 198 Freiburg 2011-07-17 198      616615 #> 199 Freiburg 2011-07-18 199      570840 #> 200 Freiburg 2011-07-19 200      538893 #> 201 Freiburg 2011-07-20 201      506403 #> 202 Freiburg 2011-07-21 202      476256 #> 203 Freiburg 2011-07-22 203      441617 #> 204 Freiburg 2011-07-23 204      414090 #> 205 Freiburg 2011-07-24 205      403892 #> 206 Freiburg 2011-07-25 206      387630 #> 207 Freiburg 2011-07-26 207      357778 #> 208 Freiburg 2011-07-27 208      326114 #> 209 Freiburg 2011-07-28 209      298653 #> 210 Freiburg 2011-07-29 210      274368 #> 211 Freiburg 2011-07-30 211      253942 #> 212 Freiburg 2011-07-31 212      239479 #> 213 Freiburg 2011-08-01 213      223651 #> 214 Freiburg 2011-08-02 214      202751 #> 215 Freiburg 2011-08-03 215      179769 #> 216 Freiburg 2011-08-04 216      157819 #> 217 Freiburg 2011-08-05 217      139859 #> 218 Freiburg 2011-08-06 218      125346 #> 219 Freiburg 2011-08-07 219      113730 #> 220 Freiburg 2011-08-08 220      105887 #> 221 Freiburg 2011-08-09 221      100075 #> 222 Freiburg 2011-08-10 222       95659 #> 223 Freiburg 2011-08-11 223       89398 #> 224 Freiburg 2011-08-12 224       80950 #> 225 Freiburg 2011-08-13 225       72628 #> 226 Freiburg 2011-08-14 226       65165 #> 227 Freiburg 2011-08-15 227       58512 #> 228 Freiburg 2011-08-16 228       53465 #> 229 Freiburg 2011-08-17 229       48245 #> 230 Freiburg 2011-08-18 230       42513 #> 231 Freiburg 2011-08-19 231       37364 #> 232 Freiburg 2011-08-20 232       33084 #> 233 Freiburg 2011-08-21 233       29392 #> 234 Freiburg 2011-08-22 234       26858 #> 235 Freiburg 2011-08-23 235       24944 #> 236 Freiburg 2011-08-24 236       22473 #> 237 Freiburg 2011-08-25 237       19864 #> 238 Freiburg 2011-08-26 238       17691 #> 239 Freiburg 2011-08-27 239       16437 #> 240 Freiburg 2011-08-28 240       15697 #> 241 Freiburg 2011-08-29 241       14668 #> 242 Freiburg 2011-08-30 242       13777 #> 243 Freiburg 2011-08-31 243       12865 #> 244 Freiburg 2011-09-01 244       11716 #> 245 Freiburg 2011-09-02 245       10458 #> 246 Freiburg 2011-09-03 246        9315 #> 247 Freiburg 2011-09-04 247        8267 #> 248 Freiburg 2011-09-05 248        7631 #> 249 Freiburg 2011-09-06 249        7095 #> 250 Freiburg 2011-09-07 250        6565 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 115 rows ] # }"},{"path":"/reference/bso_plot_flight_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","title":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","text":"flight diagram illustrates daily share flying individuals time.","code":""},{"path":"/reference/bso_plot_flight_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","text":"","code":"bso_plot_flight_diagram(   .pheno,   .station = prop_stations(.pheno)[1],   .colors = barrks_colors(\"bso_flight\"),   .labels = barrks_labels(\"bso_flight\"),   .xlim = NULL,   .legend = \"topright\",   ... )"},{"path":"/reference/bso_plot_flight_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","text":".pheno BSO phenology (see bso_phenology()) .station Pass character vector choose station assigned .pheno name, pass different station. See stations_create() details. .colors, .labels Vectors colors/labels starting first second flght hibernating generation followed consecutively elements filial generations (first second flight). .xlim Date vector length limits dates plotted. .legend Pass FALSE legend plotted. Otherwise value passed legend() first argument. Look information. ... arguments passed graphics::barplot().","code":""},{"path":"/reference/bso_plot_flight_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","text":"None","code":""},{"path":"/reference/bso_plot_flight_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a flight diagram (BSO only) — bso_plot_flight_diagram","text":"","code":"# \\donttest{ # This may take a few minutes...  # calculate phenology p <- bso_phenology('bso', barrks_data('stations'), .quiet = TRUE)  bso_plot_flight_diagram(p)  # }"},{"path":"/reference/bso_plot_stage_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","title":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","text":"stage diagram illustrates share individuals specific developmental stage time.","code":""},{"path":"/reference/bso_plot_stage_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","text":"","code":"bso_plot_stage_diagram(   .pheno,   .station = prop_stations(.pheno)[1],   .stages = list(\"white\", \"brown\"),   .lty = c(\"dashed\", \"solid\"),   .lwd = 2,   .colors = barrks_colors(\"bso_stages\"),   .labels = barrks_labels(\"bso_stages\"),   .legend_col = TRUE,   .legend_lty = TRUE,   ... )"},{"path":"/reference/bso_plot_stage_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","text":".pheno BSO phenology (see bso_phenology()) .station Pass character vector choose station assigned .pheno name, pass different station. See stations_create() details. .stages List stages plot. Elements passed bso_get_individuals_df(). Look information. .lty, .lwd Vectors line types line widths used plot different stages. length .stages 1. .colors, .labels Vectors colors/labels starting hibernating generation followed consecutively elements filial generations (including sisterbroods). .legend_col, .legend_lty Manipulate appearance legends colors line types. Pass TRUE/FALSE enable/disable respective legend. customization respective legend, list parameters graphics::legend can passed. ... arguments passed base::plot().","code":""},{"path":"/reference/bso_plot_stage_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","text":"None","code":""},{"path":"/reference/bso_plot_stage_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a stage diagram (BSO only) — bso_plot_stage_diagram","text":"","code":"# \\donttest{ # This may take a few minutes...  # calculate phenology p <- bso_phenology('bso', barrks_data('stations'), .quiet = TRUE)  bso_plot_stage_diagram(p)  # }"},{"path":"/reference/bso_translate_phenology.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate BSO generated phenology — bso_translate_phenology","title":"Translate BSO generated phenology — bso_translate_phenology","text":"BSO generated phenology analysed way phenology objects. able use functions available phenology objects returned phenology(), BSO generated phenology translated.","code":""},{"path":"/reference/bso_translate_phenology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate BSO generated phenology — bso_translate_phenology","text":"","code":"bso_translate_phenology(pheno, threshold = 0.1, .quiet = FALSE)"},{"path":"/reference/bso_translate_phenology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate BSO generated phenology — bso_translate_phenology","text":"pheno BSO phenology (see bso_phenology()) threshold Share individuals must reached specific development BSO phenology account corresponding standard phenology. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/bso_translate_phenology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate BSO generated phenology — bso_translate_phenology","text":"Returns standard phenology list. Look find phenology can analysed. recommended access list elements directly.","code":""},{"path":"/reference/bso_translate_phenology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate BSO generated phenology — bso_translate_phenology","text":"","code":"# \\donttest{ # This may take a few minutes...  # calculate and translate BSO phenology p <- bso_phenology('bso', barrks_data('stations'), .quiet = TRUE) pt <- bso_translate_phenology(p, .quiet = TRUE)  # print the generations data frame of station 'Freiburg' df <- get_generations_df(pt, 'Freiburg') df #>      station       date doy generation #> 1   Freiburg 2011-01-01   1        0.0 #> 2   Freiburg 2011-01-02   2        0.0 #> 3   Freiburg 2011-01-03   3        0.0 #> 4   Freiburg 2011-01-04   4        0.0 #> 5   Freiburg 2011-01-05   5        0.0 #> 6   Freiburg 2011-01-06   6        0.0 #> 7   Freiburg 2011-01-07   7        0.0 #> 8   Freiburg 2011-01-08   8        0.0 #> 9   Freiburg 2011-01-09   9        0.0 #> 10  Freiburg 2011-01-10  10        0.0 #> 11  Freiburg 2011-01-11  11        0.0 #> 12  Freiburg 2011-01-12  12        0.0 #> 13  Freiburg 2011-01-13  13        0.0 #> 14  Freiburg 2011-01-14  14        0.0 #> 15  Freiburg 2011-01-15  15        0.0 #> 16  Freiburg 2011-01-16  16        0.0 #> 17  Freiburg 2011-01-17  17        0.0 #> 18  Freiburg 2011-01-18  18        0.0 #> 19  Freiburg 2011-01-19  19        0.0 #> 20  Freiburg 2011-01-20  20        0.0 #> 21  Freiburg 2011-01-21  21        0.0 #> 22  Freiburg 2011-01-22  22        0.0 #> 23  Freiburg 2011-01-23  23        0.0 #> 24  Freiburg 2011-01-24  24        0.0 #> 25  Freiburg 2011-01-25  25        0.0 #> 26  Freiburg 2011-01-26  26        0.0 #> 27  Freiburg 2011-01-27  27        0.0 #> 28  Freiburg 2011-01-28  28        0.0 #> 29  Freiburg 2011-01-29  29        0.0 #> 30  Freiburg 2011-01-30  30        0.0 #> 31  Freiburg 2011-01-31  31        0.0 #> 32  Freiburg 2011-02-01  32        0.0 #> 33  Freiburg 2011-02-02  33        0.0 #> 34  Freiburg 2011-02-03  34        0.0 #> 35  Freiburg 2011-02-04  35        0.0 #> 36  Freiburg 2011-02-05  36        0.0 #> 37  Freiburg 2011-02-06  37        0.0 #> 38  Freiburg 2011-02-07  38        0.0 #> 39  Freiburg 2011-02-08  39        0.0 #> 40  Freiburg 2011-02-09  40        0.0 #> 41  Freiburg 2011-02-10  41        0.0 #> 42  Freiburg 2011-02-11  42        0.0 #> 43  Freiburg 2011-02-12  43        0.0 #> 44  Freiburg 2011-02-13  44        0.0 #> 45  Freiburg 2011-02-14  45        0.0 #> 46  Freiburg 2011-02-15  46        0.0 #> 47  Freiburg 2011-02-16  47        0.0 #> 48  Freiburg 2011-02-17  48        0.0 #> 49  Freiburg 2011-02-18  49        0.0 #> 50  Freiburg 2011-02-19  50        0.0 #> 51  Freiburg 2011-02-20  51        0.0 #> 52  Freiburg 2011-02-21  52        0.0 #> 53  Freiburg 2011-02-22  53        0.0 #> 54  Freiburg 2011-02-23  54        0.0 #> 55  Freiburg 2011-02-24  55        0.0 #> 56  Freiburg 2011-02-25  56        0.0 #> 57  Freiburg 2011-02-26  57        0.0 #> 58  Freiburg 2011-02-27  58        0.0 #> 59  Freiburg 2011-02-28  59        0.0 #> 60  Freiburg 2011-03-01  60        0.0 #> 61  Freiburg 2011-03-02  61        0.0 #> 62  Freiburg 2011-03-03  62        0.0 #> 63  Freiburg 2011-03-04  63        0.0 #> 64  Freiburg 2011-03-05  64        0.0 #> 65  Freiburg 2011-03-06  65        0.0 #> 66  Freiburg 2011-03-07  66        0.0 #> 67  Freiburg 2011-03-08  67        0.0 #> 68  Freiburg 2011-03-09  68        0.0 #> 69  Freiburg 2011-03-10  69        0.0 #> 70  Freiburg 2011-03-11  70        0.0 #> 71  Freiburg 2011-03-12  71        0.0 #> 72  Freiburg 2011-03-13  72        0.0 #> 73  Freiburg 2011-03-14  73        0.0 #> 74  Freiburg 2011-03-15  74        0.0 #> 75  Freiburg 2011-03-16  75        0.0 #> 76  Freiburg 2011-03-17  76        0.0 #> 77  Freiburg 2011-03-18  77        0.0 #> 78  Freiburg 2011-03-19  78        0.0 #> 79  Freiburg 2011-03-20  79        0.0 #> 80  Freiburg 2011-03-21  80        0.0 #> 81  Freiburg 2011-03-22  81        0.0 #> 82  Freiburg 2011-03-23  82        0.0 #> 83  Freiburg 2011-03-24  83        0.0 #> 84  Freiburg 2011-03-25  84        0.0 #> 85  Freiburg 2011-03-26  85        0.0 #> 86  Freiburg 2011-03-27  86        0.0 #> 87  Freiburg 2011-03-28  87        0.0 #> 88  Freiburg 2011-03-29  88        0.0 #> 89  Freiburg 2011-03-30  89        0.0 #> 90  Freiburg 2011-03-31  90        0.0 #> 91  Freiburg 2011-04-01  91        0.0 #> 92  Freiburg 2011-04-02  92        0.0 #> 93  Freiburg 2011-04-03  93        1.0 #> 94  Freiburg 2011-04-04  94        1.0 #> 95  Freiburg 2011-04-05  95        1.0 #> 96  Freiburg 2011-04-06  96        1.0 #> 97  Freiburg 2011-04-07  97        1.0 #> 98  Freiburg 2011-04-08  98        1.0 #> 99  Freiburg 2011-04-09  99        1.0 #> 100 Freiburg 2011-04-10 100        1.0 #> 101 Freiburg 2011-04-11 101        1.0 #> 102 Freiburg 2011-04-12 102        1.5 #> 103 Freiburg 2011-04-13 103        1.5 #> 104 Freiburg 2011-04-14 104        1.5 #> 105 Freiburg 2011-04-15 105        1.5 #> 106 Freiburg 2011-04-16 106        1.5 #> 107 Freiburg 2011-04-17 107        1.5 #> 108 Freiburg 2011-04-18 108        1.5 #> 109 Freiburg 2011-04-19 109        1.5 #> 110 Freiburg 2011-04-20 110        1.5 #> 111 Freiburg 2011-04-21 111        1.5 #> 112 Freiburg 2011-04-22 112        1.5 #> 113 Freiburg 2011-04-23 113        1.5 #> 114 Freiburg 2011-04-24 114        1.5 #> 115 Freiburg 2011-04-25 115        1.5 #> 116 Freiburg 2011-04-26 116        1.5 #> 117 Freiburg 2011-04-27 117        1.5 #> 118 Freiburg 2011-04-28 118        1.5 #> 119 Freiburg 2011-04-29 119        1.5 #> 120 Freiburg 2011-04-30 120        1.5 #> 121 Freiburg 2011-05-01 121        1.5 #> 122 Freiburg 2011-05-02 122        1.5 #> 123 Freiburg 2011-05-03 123        1.5 #> 124 Freiburg 2011-05-04 124        1.5 #> 125 Freiburg 2011-05-05 125        1.5 #> 126 Freiburg 2011-05-06 126        1.5 #> 127 Freiburg 2011-05-07 127        1.5 #> 128 Freiburg 2011-05-08 128        1.5 #> 129 Freiburg 2011-05-09 129        1.5 #> 130 Freiburg 2011-05-10 130        1.5 #> 131 Freiburg 2011-05-11 131        1.5 #> 132 Freiburg 2011-05-12 132        1.5 #> 133 Freiburg 2011-05-13 133        1.5 #> 134 Freiburg 2011-05-14 134        1.5 #> 135 Freiburg 2011-05-15 135        1.5 #> 136 Freiburg 2011-05-16 136        1.5 #> 137 Freiburg 2011-05-17 137        1.5 #> 138 Freiburg 2011-05-18 138        1.5 #> 139 Freiburg 2011-05-19 139        1.5 #> 140 Freiburg 2011-05-20 140        1.5 #> 141 Freiburg 2011-05-21 141        1.5 #> 142 Freiburg 2011-05-22 142        1.5 #> 143 Freiburg 2011-05-23 143        1.5 #> 144 Freiburg 2011-05-24 144        1.5 #> 145 Freiburg 2011-05-25 145        1.5 #> 146 Freiburg 2011-05-26 146        1.5 #> 147 Freiburg 2011-05-27 147        1.5 #> 148 Freiburg 2011-05-28 148        1.5 #> 149 Freiburg 2011-05-29 149        1.5 #> 150 Freiburg 2011-05-30 150        1.5 #> 151 Freiburg 2011-05-31 151        1.5 #> 152 Freiburg 2011-06-01 152        1.5 #> 153 Freiburg 2011-06-02 153        1.5 #> 154 Freiburg 2011-06-03 154        1.5 #> 155 Freiburg 2011-06-04 155        1.5 #> 156 Freiburg 2011-06-05 156        1.5 #> 157 Freiburg 2011-06-06 157        1.5 #> 158 Freiburg 2011-06-07 158        1.5 #> 159 Freiburg 2011-06-08 159        1.5 #> 160 Freiburg 2011-06-09 160        1.5 #> 161 Freiburg 2011-06-10 161        1.5 #> 162 Freiburg 2011-06-11 162        1.5 #> 163 Freiburg 2011-06-12 163        1.5 #> 164 Freiburg 2011-06-13 164        1.5 #> 165 Freiburg 2011-06-14 165        1.5 #> 166 Freiburg 2011-06-15 166        1.5 #> 167 Freiburg 2011-06-16 167        1.5 #> 168 Freiburg 2011-06-17 168        1.5 #> 169 Freiburg 2011-06-18 169        1.5 #> 170 Freiburg 2011-06-19 170        1.5 #> 171 Freiburg 2011-06-20 171        1.5 #> 172 Freiburg 2011-06-21 172        1.5 #> 173 Freiburg 2011-06-22 173        1.5 #> 174 Freiburg 2011-06-23 174        1.5 #> 175 Freiburg 2011-06-24 175        1.5 #> 176 Freiburg 2011-06-25 176        1.5 #> 177 Freiburg 2011-06-26 177        1.5 #> 178 Freiburg 2011-06-27 178        1.5 #> 179 Freiburg 2011-06-28 179        2.0 #> 180 Freiburg 2011-06-29 180        2.0 #> 181 Freiburg 2011-06-30 181        2.0 #> 182 Freiburg 2011-07-01 182        2.0 #> 183 Freiburg 2011-07-02 183        2.0 #> 184 Freiburg 2011-07-03 184        2.0 #> 185 Freiburg 2011-07-04 185        2.0 #> 186 Freiburg 2011-07-05 186        2.5 #> 187 Freiburg 2011-07-06 187        2.5 #> 188 Freiburg 2011-07-07 188        2.5 #> 189 Freiburg 2011-07-08 189        2.5 #> 190 Freiburg 2011-07-09 190        2.5 #> 191 Freiburg 2011-07-10 191        2.5 #> 192 Freiburg 2011-07-11 192        2.5 #> 193 Freiburg 2011-07-12 193        2.5 #> 194 Freiburg 2011-07-13 194        2.5 #> 195 Freiburg 2011-07-14 195        2.5 #> 196 Freiburg 2011-07-15 196        2.5 #> 197 Freiburg 2011-07-16 197        2.5 #> 198 Freiburg 2011-07-17 198        2.5 #> 199 Freiburg 2011-07-18 199        2.5 #> 200 Freiburg 2011-07-19 200        2.5 #> 201 Freiburg 2011-07-20 201        2.5 #> 202 Freiburg 2011-07-21 202        2.5 #> 203 Freiburg 2011-07-22 203        2.5 #> 204 Freiburg 2011-07-23 204        2.5 #> 205 Freiburg 2011-07-24 205        2.5 #> 206 Freiburg 2011-07-25 206        2.5 #> 207 Freiburg 2011-07-26 207        2.5 #> 208 Freiburg 2011-07-27 208        2.5 #> 209 Freiburg 2011-07-28 209        2.5 #> 210 Freiburg 2011-07-29 210        2.5 #> 211 Freiburg 2011-07-30 211        2.5 #> 212 Freiburg 2011-07-31 212        2.5 #> 213 Freiburg 2011-08-01 213        2.5 #> 214 Freiburg 2011-08-02 214        2.5 #> 215 Freiburg 2011-08-03 215        2.5 #> 216 Freiburg 2011-08-04 216        2.5 #> 217 Freiburg 2011-08-05 217        2.5 #> 218 Freiburg 2011-08-06 218        2.5 #> 219 Freiburg 2011-08-07 219        2.5 #> 220 Freiburg 2011-08-08 220        2.5 #> 221 Freiburg 2011-08-09 221        2.5 #> 222 Freiburg 2011-08-10 222        2.5 #> 223 Freiburg 2011-08-11 223        2.5 #> 224 Freiburg 2011-08-12 224        2.5 #> 225 Freiburg 2011-08-13 225        2.5 #> 226 Freiburg 2011-08-14 226        2.5 #> 227 Freiburg 2011-08-15 227        2.5 #> 228 Freiburg 2011-08-16 228        2.5 #> 229 Freiburg 2011-08-17 229        2.5 #> 230 Freiburg 2011-08-18 230        2.5 #> 231 Freiburg 2011-08-19 231        2.5 #> 232 Freiburg 2011-08-20 232        2.5 #> 233 Freiburg 2011-08-21 233        2.5 #> 234 Freiburg 2011-08-22 234        2.5 #> 235 Freiburg 2011-08-23 235        2.5 #> 236 Freiburg 2011-08-24 236        2.5 #> 237 Freiburg 2011-08-25 237        2.5 #> 238 Freiburg 2011-08-26 238        2.5 #> 239 Freiburg 2011-08-27 239        2.5 #> 240 Freiburg 2011-08-28 240        2.5 #> 241 Freiburg 2011-08-29 241        2.5 #> 242 Freiburg 2011-08-30 242        2.5 #> 243 Freiburg 2011-08-31 243        2.5 #> 244 Freiburg 2011-09-01 244        2.5 #> 245 Freiburg 2011-09-02 245        2.5 #> 246 Freiburg 2011-09-03 246        2.5 #> 247 Freiburg 2011-09-04 247        2.5 #> 248 Freiburg 2011-09-05 248        2.5 #> 249 Freiburg 2011-09-06 249        2.5 #> 250 Freiburg 2011-09-07 250        2.5 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 115 rows ] # }"},{"path":"/reference/categorize_generations_rst.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a numeric generations raster categorical — categorize_generations_rst","title":"Make a numeric generations raster categorical — categorize_generations_rst","text":"Make numeric generations raster categorical. Useful mathematical operations performed generations rasters (use get_generations_rst(..., categorical = FALSE) get numeric generations rasters).","code":""},{"path":"/reference/categorize_generations_rst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a numeric generations raster categorical — categorize_generations_rst","text":"","code":"categorize_generations_rst(   rst,   colors = barrks_colors(),   labels = barrks_labels() )"},{"path":"/reference/categorize_generations_rst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a numeric generations raster categorical — categorize_generations_rst","text":"rst numeric SpatRaster represents bark beetle generations. Sister broods defined adding 0.5 respective generation. colors, labels Vectors colors/labels starting zero generations followed consecutively elements respective generations (including sister broods).","code":""},{"path":"/reference/categorize_generations_rst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a numeric generations raster categorical — categorize_generations_rst","text":"categorical SpatRaster.","code":""},{"path":"/reference/categorize_generations_rst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a numeric generations raster categorical — categorize_generations_rst","text":"","code":"# \\donttest{ # calculate phenology with different models p1 <- phenology('phenips-clim', barrks_data(), .quiet = TRUE) p2 <- phenology('phenips', barrks_data(), .quiet = TRUE)  # get the generation as numerical rasters to allow mathematical operations gens1 <- get_generations_rst(p1, categorical = FALSE) gens2 <- get_generations_rst(p2, categorical = FALSE)  # calculate the maximum generations from the 2 models gens_max <- max(gens1, gens2) # categorize the results gens_max_cat <- categorize_generations_rst(gens_max)  # plot the categorized raster terra::plot(gens_max_cat)  # plot the uncategorized raster terra::plot(gens_max)  # }"},{"path":"/reference/create_daylength_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame of day lengths — create_daylength_df","title":"Create a data frame of day lengths — create_daylength_df","text":"Generate data frame day lengths given latitudes. package geosphere required use function.","code":""},{"path":"/reference/create_daylength_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame of day lengths — create_daylength_df","text":"","code":"create_daylength_df(lat, dates, .quiet = FALSE)"},{"path":"/reference/create_daylength_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame of day lengths — create_daylength_df","text":"lat Data frame fields station lat. Defines latitude respective stations. dates Dates processed. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/create_daylength_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame of day lengths — create_daylength_df","text":"data frame columns date, station daylength.","code":""},{"path":[]},{"path":"/reference/create_daylength_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame of day lengths — create_daylength_df","text":"","code":"# dates of interest date_start <- as.Date('2020-01-01') date_end <- as.Date('2020-12-31')   # calculate day length dl <- create_daylength_df(barrks_data('station_coords'),                           seq(date_start, date_end, by = 'day'),                           .quiet = TRUE)  # print day lengths of station 'Freiburg' dl[dl$station == 'Freiburg',] #>            date  station daylength #> 1    2020-01-01 Freiburg  8.435464 #> 5    2020-01-02 Freiburg  8.451082 #> 9    2020-01-03 Freiburg  8.468145 #> 13   2020-01-04 Freiburg  8.486635 #> 17   2020-01-05 Freiburg  8.506531 #> 21   2020-01-06 Freiburg  8.527813 #> 25   2020-01-07 Freiburg  8.550457 #> 29   2020-01-08 Freiburg  8.574441 #> 33   2020-01-09 Freiburg  8.599739 #> 37   2020-01-10 Freiburg  8.626326 #> 41   2020-01-11 Freiburg  8.654176 #> 45   2020-01-12 Freiburg  8.683262 #> 49   2020-01-13 Freiburg  8.713556 #> 53   2020-01-14 Freiburg  8.745028 #> 57   2020-01-15 Freiburg  8.777651 #> 61   2020-01-16 Freiburg  8.811395 #> 65   2020-01-17 Freiburg  8.846230 #> 69   2020-01-18 Freiburg  8.882127 #> 73   2020-01-19 Freiburg  8.919054 #> 77   2020-01-20 Freiburg  8.956983 #> 81   2020-01-21 Freiburg  8.995882 #> 85   2020-01-22 Freiburg  9.035722 #> 89   2020-01-23 Freiburg  9.076472 #> 93   2020-01-24 Freiburg  9.118103 #> 97   2020-01-25 Freiburg  9.160584 #> 101  2020-01-26 Freiburg  9.203886 #> 105  2020-01-27 Freiburg  9.247981 #> 109  2020-01-28 Freiburg  9.292838 #> 113  2020-01-29 Freiburg  9.338431 #> 117  2020-01-30 Freiburg  9.384731 #> 121  2020-01-31 Freiburg  9.431711 #> 125  2020-02-01 Freiburg  9.479344 #> 129  2020-02-02 Freiburg  9.527603 #> 133  2020-02-03 Freiburg  9.576462 #> 137  2020-02-04 Freiburg  9.625898 #> 141  2020-02-05 Freiburg  9.675884 #> 145  2020-02-06 Freiburg  9.726397 #> 149  2020-02-07 Freiburg  9.777414 #> 153  2020-02-08 Freiburg  9.828912 #> 157  2020-02-09 Freiburg  9.880869 #> 161  2020-02-10 Freiburg  9.933263 #> 165  2020-02-11 Freiburg  9.986074 #> 169  2020-02-12 Freiburg 10.039281 #> 173  2020-02-13 Freiburg 10.092866 #> 177  2020-02-14 Freiburg 10.146808 #> 181  2020-02-15 Freiburg 10.201091 #> 185  2020-02-16 Freiburg 10.255696 #> 189  2020-02-17 Freiburg 10.310606 #> 193  2020-02-18 Freiburg 10.365806 #> 197  2020-02-19 Freiburg 10.421279 #> 201  2020-02-20 Freiburg 10.477009 #> 205  2020-02-21 Freiburg 10.532983 #> 209  2020-02-22 Freiburg 10.589187 #> 213  2020-02-23 Freiburg 10.645606 #> 217  2020-02-24 Freiburg 10.702227 #> 221  2020-02-25 Freiburg 10.759039 #> 225  2020-02-26 Freiburg 10.816029 #> 229  2020-02-27 Freiburg 10.873185 #> 233  2020-02-28 Freiburg 10.930496 #> 237  2020-02-29 Freiburg 10.987952 #> 241  2020-03-01 Freiburg 11.045542 #> 245  2020-03-02 Freiburg 11.103256 #> 249  2020-03-03 Freiburg 11.161085 #> 253  2020-03-04 Freiburg 11.219020 #> 257  2020-03-05 Freiburg 11.277051 #> 261  2020-03-06 Freiburg 11.335171 #> 265  2020-03-07 Freiburg 11.393370 #> 269  2020-03-08 Freiburg 11.451642 #> 273  2020-03-09 Freiburg 11.509978 #> 277  2020-03-10 Freiburg 11.568370 #> 281  2020-03-11 Freiburg 11.626813 #> 285  2020-03-12 Freiburg 11.685298 #> 289  2020-03-13 Freiburg 11.743819 #> 293  2020-03-14 Freiburg 11.802369 #> 297  2020-03-15 Freiburg 11.860942 #> 301  2020-03-16 Freiburg 11.919531 #> 305  2020-03-17 Freiburg 11.978131 #> 309  2020-03-18 Freiburg 12.036734 #> 313  2020-03-19 Freiburg 12.095335 #> 317  2020-03-20 Freiburg 12.153929 #> 321  2020-03-21 Freiburg 12.212508 #> 325  2020-03-22 Freiburg 12.271068 #> 329  2020-03-23 Freiburg 12.329602 #> 333  2020-03-24 Freiburg 12.388104 #> 337  2020-03-25 Freiburg 12.446568 #> 341  2020-03-26 Freiburg 12.504989 #> 345  2020-03-27 Freiburg 12.563360 #> 349  2020-03-28 Freiburg 12.621675 #> 353  2020-03-29 Freiburg 12.679929 #> 357  2020-03-30 Freiburg 12.738114 #> 361  2020-03-31 Freiburg 12.796224 #> 365  2020-04-01 Freiburg 12.854254 #> 369  2020-04-02 Freiburg 12.912195 #> 373  2020-04-03 Freiburg 12.970041 #> 377  2020-04-04 Freiburg 13.027786 #> 381  2020-04-05 Freiburg 13.085421 #> 385  2020-04-06 Freiburg 13.142940 #> 389  2020-04-07 Freiburg 13.200334 #> 393  2020-04-08 Freiburg 13.257595 #> 397  2020-04-09 Freiburg 13.314716 #> 401  2020-04-10 Freiburg 13.371687 #> 405  2020-04-11 Freiburg 13.428500 #> 409  2020-04-12 Freiburg 13.485146 #> 413  2020-04-13 Freiburg 13.541614 #> 417  2020-04-14 Freiburg 13.597896 #> 421  2020-04-15 Freiburg 13.653981 #> 425  2020-04-16 Freiburg 13.709859 #> 429  2020-04-17 Freiburg 13.765518 #> 433  2020-04-18 Freiburg 13.820947 #> 437  2020-04-19 Freiburg 13.876134 #> 441  2020-04-20 Freiburg 13.931067 #> 445  2020-04-21 Freiburg 13.985734 #> 449  2020-04-22 Freiburg 14.040121 #> 453  2020-04-23 Freiburg 14.094215 #> 457  2020-04-24 Freiburg 14.148001 #> 461  2020-04-25 Freiburg 14.201466 #> 465  2020-04-26 Freiburg 14.254594 #> 469  2020-04-27 Freiburg 14.307369 #> 473  2020-04-28 Freiburg 14.359776 #> 477  2020-04-29 Freiburg 14.411798 #> 481  2020-04-30 Freiburg 14.463418 #> 485  2020-05-01 Freiburg 14.514619 #> 489  2020-05-02 Freiburg 14.565383 #> 493  2020-05-03 Freiburg 14.615690 #> 497  2020-05-04 Freiburg 14.665522 #> 501  2020-05-05 Freiburg 14.714860 #> 505  2020-05-06 Freiburg 14.763682 #> 509  2020-05-07 Freiburg 14.811970 #> 513  2020-05-08 Freiburg 14.859701 #> 517  2020-05-09 Freiburg 14.906854 #> 521  2020-05-10 Freiburg 14.953407 #> 525  2020-05-11 Freiburg 14.999337 #> 529  2020-05-12 Freiburg 15.044622 #> 533  2020-05-13 Freiburg 15.089239 #> 537  2020-05-14 Freiburg 15.133163 #> 541  2020-05-15 Freiburg 15.176371 #> 545  2020-05-16 Freiburg 15.218839 #> 549  2020-05-17 Freiburg 15.260541 #> 553  2020-05-18 Freiburg 15.301452 #> 557  2020-05-19 Freiburg 15.341549 #> 561  2020-05-20 Freiburg 15.380804 #> 565  2020-05-21 Freiburg 15.419193 #> 569  2020-05-22 Freiburg 15.456691 #> 573  2020-05-23 Freiburg 15.493271 #> 577  2020-05-24 Freiburg 15.528908 #> 581  2020-05-25 Freiburg 15.563576 #> 585  2020-05-26 Freiburg 15.597250 #> 589  2020-05-27 Freiburg 15.629904 #> 593  2020-05-28 Freiburg 15.661514 #> 597  2020-05-29 Freiburg 15.692055 #> 601  2020-05-30 Freiburg 15.721502 #> 605  2020-05-31 Freiburg 15.749830 #> 609  2020-06-01 Freiburg 15.777017 #> 613  2020-06-02 Freiburg 15.803040 #> 617  2020-06-03 Freiburg 15.827876 #> 621  2020-06-04 Freiburg 15.851503 #> 625  2020-06-05 Freiburg 15.873900 #> 629  2020-06-06 Freiburg 15.895048 #> 633  2020-06-07 Freiburg 15.914926 #> 637  2020-06-08 Freiburg 15.933517 #> 641  2020-06-09 Freiburg 15.950802 #> 645  2020-06-10 Freiburg 15.966767 #> 649  2020-06-11 Freiburg 15.981395 #> 653  2020-06-12 Freiburg 15.994672 #> 657  2020-06-13 Freiburg 16.006587 #> 661  2020-06-14 Freiburg 16.017127 #> 665  2020-06-15 Freiburg 16.026281 #> 669  2020-06-16 Freiburg 16.034042 #> 673  2020-06-17 Freiburg 16.040402 #> 677  2020-06-18 Freiburg 16.045354 #> 681  2020-06-19 Freiburg 16.048895 #> 685  2020-06-20 Freiburg 16.051020 #> 689  2020-06-21 Freiburg 16.051728 #> 693  2020-06-22 Freiburg 16.051020 #> 697  2020-06-23 Freiburg 16.048896 #> 701  2020-06-24 Freiburg 16.045359 #> 705  2020-06-25 Freiburg 16.040413 #> 709  2020-06-26 Freiburg 16.034064 #> 713  2020-06-27 Freiburg 16.026318 #> 717  2020-06-28 Freiburg 16.017186 #> 721  2020-06-29 Freiburg 16.006675 #> 725  2020-06-30 Freiburg 15.994798 #> 729  2020-07-01 Freiburg 15.981566 #> 733  2020-07-02 Freiburg 15.966994 #> 737  2020-07-03 Freiburg 15.951095 #> 741  2020-07-04 Freiburg 15.933888 #> 745  2020-07-05 Freiburg 15.915387 #> 749  2020-07-06 Freiburg 15.895612 #> 753  2020-07-07 Freiburg 15.874581 #> 757  2020-07-08 Freiburg 15.852314 #> 761  2020-07-09 Freiburg 15.828833 #> 765  2020-07-10 Freiburg 15.804158 #> 769  2020-07-11 Freiburg 15.778312 #> 773  2020-07-12 Freiburg 15.751318 #> 777  2020-07-13 Freiburg 15.723199 #> 781  2020-07-14 Freiburg 15.693979 #> 785  2020-07-15 Freiburg 15.663682 #> 789  2020-07-16 Freiburg 15.632333 #> 793  2020-07-17 Freiburg 15.599957 #> 797  2020-07-18 Freiburg 15.566580 #> 801  2020-07-19 Freiburg 15.532226 #> 805  2020-07-20 Freiburg 15.496922 #> 809  2020-07-21 Freiburg 15.460693 #> 813  2020-07-22 Freiburg 15.423564 #> 817  2020-07-23 Freiburg 15.385561 #> 821  2020-07-24 Freiburg 15.346710 #> 825  2020-07-25 Freiburg 15.307035 #> 829  2020-07-26 Freiburg 15.266563 #> 833  2020-07-27 Freiburg 15.225318 #> 837  2020-07-28 Freiburg 15.183325 #> 841  2020-07-29 Freiburg 15.140608 #> 845  2020-07-30 Freiburg 15.097192 #> 849  2020-07-31 Freiburg 15.053099 #> 853  2020-08-01 Freiburg 15.008355 #> 857  2020-08-02 Freiburg 14.962980 #> 861  2020-08-03 Freiburg 14.916999 #> 865  2020-08-04 Freiburg 14.870433 #> 869  2020-08-05 Freiburg 14.823303 #> 873  2020-08-06 Freiburg 14.775632 #> 877  2020-08-07 Freiburg 14.727439 #> 881  2020-08-08 Freiburg 14.678745 #> 885  2020-08-09 Freiburg 14.629570 #> 889  2020-08-10 Freiburg 14.579933 #> 893  2020-08-11 Freiburg 14.529851 #> 897  2020-08-12 Freiburg 14.479345 #> 901  2020-08-13 Freiburg 14.428431 #> 905  2020-08-14 Freiburg 14.377126 #> 909  2020-08-15 Freiburg 14.325447 #> 913  2020-08-16 Freiburg 14.273410 #> 917  2020-08-17 Freiburg 14.221031 #> 921  2020-08-18 Freiburg 14.168324 #> 925  2020-08-19 Freiburg 14.115305 #> 929  2020-08-20 Freiburg 14.061987 #> 933  2020-08-21 Freiburg 14.008385 #> 937  2020-08-22 Freiburg 13.954511 #> 941  2020-08-23 Freiburg 13.900378 #> 945  2020-08-24 Freiburg 13.845998 #> 949  2020-08-25 Freiburg 13.791383 #> 953  2020-08-26 Freiburg 13.736545 #> 957  2020-08-27 Freiburg 13.681494 #> 961  2020-08-28 Freiburg 13.626242 #> 965  2020-08-29 Freiburg 13.570798 #> 969  2020-08-30 Freiburg 13.515172 #> 973  2020-08-31 Freiburg 13.459373 #> 977  2020-09-01 Freiburg 13.403412 #> 981  2020-09-02 Freiburg 13.347296 #> 985  2020-09-03 Freiburg 13.291034 #> 989  2020-09-04 Freiburg 13.234634 #> 993  2020-09-05 Freiburg 13.178105 #> 997  2020-09-06 Freiburg 13.121453 #> 1001 2020-09-07 Freiburg 13.064687 #> 1005 2020-09-08 Freiburg 13.007813 #> 1009 2020-09-09 Freiburg 12.950838 #> 1013 2020-09-10 Freiburg 12.893769 #> 1017 2020-09-11 Freiburg 12.836613 #> 1021 2020-09-12 Freiburg 12.779376 #> 1025 2020-09-13 Freiburg 12.722063 #> 1029 2020-09-14 Freiburg 12.664682 #> 1033 2020-09-15 Freiburg 12.607237 #> 1037 2020-09-16 Freiburg 12.549735 #> 1041 2020-09-17 Freiburg 12.492182 #> 1045 2020-09-18 Freiburg 12.434582 #> 1049 2020-09-19 Freiburg 12.376942 #> 1053 2020-09-20 Freiburg 12.319267 #> 1057 2020-09-21 Freiburg 12.261562 #> 1061 2020-09-22 Freiburg 12.203833 #> 1065 2020-09-23 Freiburg 12.146085 #> 1069 2020-09-24 Freiburg 12.088324 #> 1073 2020-09-25 Freiburg 12.030555 #> 1077 2020-09-26 Freiburg 11.972784 #> 1081 2020-09-27 Freiburg 11.915015 #> 1085 2020-09-28 Freiburg 11.857256 #> 1089 2020-09-29 Freiburg 11.799511 #> 1093 2020-09-30 Freiburg 11.741786 #> 1097 2020-10-01 Freiburg 11.684088 #> 1101 2020-10-02 Freiburg 11.626423 #> 1105 2020-10-03 Freiburg 11.568796 #> 1109 2020-10-04 Freiburg 11.511215 #> 1113 2020-10-05 Freiburg 11.453686 #> 1117 2020-10-06 Freiburg 11.396215 #> 1121 2020-10-07 Freiburg 11.338811 #> 1125 2020-10-08 Freiburg 11.281480 #> 1129 2020-10-09 Freiburg 11.224230 #> 1133 2020-10-10 Freiburg 11.167069 #> 1137 2020-10-11 Freiburg 11.110006 #> 1141 2020-10-12 Freiburg 11.053048 #> 1145 2020-10-13 Freiburg 10.996205 #> 1149 2020-10-14 Freiburg 10.939487 #> 1153 2020-10-15 Freiburg 10.882902 #> 1157 2020-10-16 Freiburg 10.826461 #> 1161 2020-10-17 Freiburg 10.770174 #> 1165 2020-10-18 Freiburg 10.714052 #> 1169 2020-10-19 Freiburg 10.658108 #> 1173 2020-10-20 Freiburg 10.602351 #> 1177 2020-10-21 Freiburg 10.546795 #> 1181 2020-10-22 Freiburg 10.491453 #> 1185 2020-10-23 Freiburg 10.436338 #> 1189 2020-10-24 Freiburg 10.381463 #> 1193 2020-10-25 Freiburg 10.326844 #> 1197 2020-10-26 Freiburg 10.272495 #> 1201 2020-10-27 Freiburg 10.218432 #> 1205 2020-10-28 Freiburg 10.164671 #> 1209 2020-10-29 Freiburg 10.111228 #> 1213 2020-10-30 Freiburg 10.058121 #> 1217 2020-10-31 Freiburg 10.005369 #> 1221 2020-11-01 Freiburg  9.952989 #> 1225 2020-11-02 Freiburg  9.901001 #> 1229 2020-11-03 Freiburg  9.849425 #> 1233 2020-11-04 Freiburg  9.798281 #> 1237 2020-11-05 Freiburg  9.747591 #> 1241 2020-11-06 Freiburg  9.697376 #> 1245 2020-11-07 Freiburg  9.647659 #> 1249 2020-11-08 Freiburg  9.598463 #> 1253 2020-11-09 Freiburg  9.549812 #> 1257 2020-11-10 Freiburg  9.501730 #> 1261 2020-11-11 Freiburg  9.454243 #> 1265 2020-11-12 Freiburg  9.407375 #> 1269 2020-11-13 Freiburg  9.361152 #> 1273 2020-11-14 Freiburg  9.315603 #> 1277 2020-11-15 Freiburg  9.270753 #> 1281 2020-11-16 Freiburg  9.226631 #> 1285 2020-11-17 Freiburg  9.183264 #> 1289 2020-11-18 Freiburg  9.140682 #> 1293 2020-11-19 Freiburg  9.098913 #> 1297 2020-11-20 Freiburg  9.057987 #> 1301 2020-11-21 Freiburg  9.017932 #> 1305 2020-11-22 Freiburg  8.978780 #> 1309 2020-11-23 Freiburg  8.940560 #> 1313 2020-11-24 Freiburg  8.903303 #> 1317 2020-11-25 Freiburg  8.867038 #> 1321 2020-11-26 Freiburg  8.831796 #> 1325 2020-11-27 Freiburg  8.797606 #> 1329 2020-11-28 Freiburg  8.764500 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 33 rows ]"},{"path":"/reference/create_daylength_rst.html","id":null,"dir":"Reference","previous_headings":"","what":"Create day length rasters — create_daylength_rst","title":"Create day length rasters — create_daylength_rst","text":"Generate multi-layer SpatRaster day lengths given template. package geosphere required use function.","code":""},{"path":"/reference/create_daylength_rst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create day length rasters — create_daylength_rst","text":"","code":"create_daylength_rst(   template,   dates = terra::time(template),   crs = \"EPSG:4258\",   .quiet = FALSE )"},{"path":"/reference/create_daylength_rst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create day length rasters — create_daylength_rst","text":"template (Multi-layer) SpatRaster determines spatial extent result. dates Dates processed. specified, dates template used terra::time(). crs Coordinate reference system longitude/latitude metrics. used project raster coordinates able retrieve latitude. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/create_daylength_rst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create day length rasters — create_daylength_rst","text":"multi-layer SpatRaster. layer represents one date.","code":""},{"path":[]},{"path":"/reference/create_daylength_rst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create day length rasters — create_daylength_rst","text":"","code":"# \\donttest{ # calculate day length, use barrks_data()$tmin as template dl <- create_daylength_rst(barrks_data()$tmin, .quiet = TRUE)  # plot day length on May 1st, 2015 terra::plot(dl[[terra::time(dl) == '2015-05-01']])  # }"},{"path":"/reference/create_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Create phenological events (onset/diapause/mortality) — create_onset","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"Generate onset, diapause mortality manually able run phenology() observed arbitrary inputs.","code":""},{"path":"/reference/create_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"","code":"create_onset(   template,   doys = NULL,   stations = NULL,   dates = NULL,   .quiet = FALSE )  create_diapause(   template,   doys = NULL,   stations = NULL,   dates = NULL,   .quiet = FALSE )  create_mortality(   template,   doys = NULL,   stations = NULL,   dates = NULL,   .quiet = FALSE )"},{"path":"/reference/create_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"template SpatRaster data frame determines spatial temporal extent result. single-layer SpatRaster passed, temporal extent defined using dates. doys Numeric vector, (multi-layer) SpatRaster data frame specifies days year event triggered. Vectors define events globally whereas SpatRasters allow spatially explict definitions. creation events based stations, data frames used. case, field station specifies station name doy indicates respective day year. stations template SpatRaster doys data frame, stations passed define cells affected. See stations_create() details. dates Dates define temporal extent output template single-layer SpatRaster. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/create_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"logical multi-layer SpatRaster. layer represents one date.","code":""},{"path":"/reference/create_events.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"create_onset(): Create onset. create_diapause(): Create diapause. create_mortality(): Create mortality events.","code":""},{"path":"/reference/create_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create phenological events (onset/diapause/mortality) — create_onset","text":"","code":"# \\donttest{ # load sample data d <- barrks_data('stations')  # create onset, diapause, mortality on <- create_onset(d, lubridate::yday('2015-04-15')) dia <- create_diapause(d, lubridate::yday('2015-08-15')) mort <- create_mortality(d, lubridate::yday('2015-11-15'))  # claculate phenologe p <- phenology('phenips-clim', d, .quiet = TRUE,                .onset = on, .diapause = dia, .mortality = mort)  # plot development plot_development_diagram(p, .lwd = 4)  # }"},{"path":"/reference/create_suntimes_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame of sunrises and sunsets — create_suntimes_df","title":"Create a data frame of sunrises and sunsets — create_suntimes_df","text":"Generate data frame specifies sunrises sunsets different coordinates dates. package suncalc required use function.","code":""},{"path":"/reference/create_suntimes_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame of sunrises and sunsets — create_suntimes_df","text":"","code":"create_suntimes_df(coords, dates, tz = Sys.timezone(), .quiet = FALSE)"},{"path":"/reference/create_suntimes_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame of sunrises and sunsets — create_suntimes_df","text":"coords Data frame fields station, lat lon. Defines latitude longitude respective stations. dates Dates processed. tz Timezone results. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/create_suntimes_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame of sunrises and sunsets — create_suntimes_df","text":"data frame columns date, station sunrise sunset. values sunrise sunset indicate respective time minutes.","code":""},{"path":[]},{"path":"/reference/create_suntimes_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame of sunrises and sunsets — create_suntimes_df","text":"","code":"# \\donttest{ date_start <- as.Date('2020-01-01') date_end <- as.Date('2020-12-31')  st <- create_suntimes_df(barrks_data('station_coords'),                          seq(date_start, date_end, by = 'day'),                          .quiet = TRUE)  # print results of station 'Freiburg' st[st$station == 'Freiburg',] #>           date  station sunrise sunset #> 1   2020-01-01 Freiburg     499   1006 #> 5   2020-01-02 Freiburg     499   1007 #> 9   2020-01-03 Freiburg     499   1008 #> 13  2020-01-04 Freiburg     499   1009 #> 17  2020-01-05 Freiburg     499   1010 #> 21  2020-01-06 Freiburg     499   1011 #> 25  2020-01-07 Freiburg     499   1012 #> 29  2020-01-08 Freiburg     498   1013 #> 33  2020-01-09 Freiburg     498   1014 #> 37  2020-01-10 Freiburg     498   1015 #> 41  2020-01-11 Freiburg     497   1017 #> 45  2020-01-12 Freiburg     497   1018 #> 49  2020-01-13 Freiburg     496   1019 #> 53  2020-01-14 Freiburg     495   1021 #> 57  2020-01-15 Freiburg     495   1022 #> 61  2020-01-16 Freiburg     494   1023 #> 65  2020-01-17 Freiburg     494   1025 #> 69  2020-01-18 Freiburg     493   1026 #> 73  2020-01-19 Freiburg     492   1028 #> 77  2020-01-20 Freiburg     491   1029 #> 81  2020-01-21 Freiburg     490   1031 #> 85  2020-01-22 Freiburg     489   1032 #> 89  2020-01-23 Freiburg     488   1034 #> 93  2020-01-24 Freiburg     487   1035 #> 97  2020-01-25 Freiburg     486   1037 #> 101 2020-01-26 Freiburg     485   1038 #> 105 2020-01-27 Freiburg     484   1040 #> 109 2020-01-28 Freiburg     483   1041 #> 113 2020-01-29 Freiburg     482   1043 #> 117 2020-01-30 Freiburg     481   1044 #> 121 2020-01-31 Freiburg     480   1046 #> 125 2020-02-01 Freiburg     478   1048 #> 129 2020-02-02 Freiburg     477   1049 #> 133 2020-02-03 Freiburg     476   1051 #> 137 2020-02-04 Freiburg     474   1052 #> 141 2020-02-05 Freiburg     473   1054 #> 145 2020-02-06 Freiburg     471   1056 #> 149 2020-02-07 Freiburg     470   1057 #> 153 2020-02-08 Freiburg     468   1059 #> 157 2020-02-09 Freiburg     467   1060 #> 161 2020-02-10 Freiburg     465   1062 #> 165 2020-02-11 Freiburg     464   1064 #> 169 2020-02-12 Freiburg     462   1065 #> 173 2020-02-13 Freiburg     461   1067 #> 177 2020-02-14 Freiburg     459   1068 #> 181 2020-02-15 Freiburg     457   1070 #> 185 2020-02-16 Freiburg     456   1072 #> 189 2020-02-17 Freiburg     454   1073 #> 193 2020-02-18 Freiburg     452   1075 #> 197 2020-02-19 Freiburg     451   1076 #> 201 2020-02-20 Freiburg     449   1078 #> 205 2020-02-21 Freiburg     447   1080 #> 209 2020-02-22 Freiburg     445   1081 #> 213 2020-02-23 Freiburg     443   1083 #> 217 2020-02-24 Freiburg     442   1084 #> 221 2020-02-25 Freiburg     440   1086 #> 225 2020-02-26 Freiburg     438   1087 #> 229 2020-02-27 Freiburg     436   1089 #> 233 2020-02-28 Freiburg     434   1091 #> 237 2020-02-29 Freiburg     432   1092 #> 241 2020-03-01 Freiburg     430   1094 #> 245 2020-03-02 Freiburg     428   1095 #> 249 2020-03-03 Freiburg     426   1097 #> 253 2020-03-04 Freiburg     424   1098 #> 257 2020-03-05 Freiburg     422   1100 #> 261 2020-03-06 Freiburg     420   1101 #> 265 2020-03-07 Freiburg     418   1103 #> 269 2020-03-08 Freiburg     416   1104 #> 273 2020-03-09 Freiburg     414   1106 #> 277 2020-03-10 Freiburg     412   1107 #> 281 2020-03-11 Freiburg     410   1109 #> 285 2020-03-12 Freiburg     408   1110 #> 289 2020-03-13 Freiburg     406   1112 #> 293 2020-03-14 Freiburg     404   1113 #> 297 2020-03-15 Freiburg     402   1115 #> 301 2020-03-16 Freiburg     400   1116 #> 305 2020-03-17 Freiburg     398   1117 #> 309 2020-03-18 Freiburg     396   1119 #> 313 2020-03-19 Freiburg     394   1120 #> 317 2020-03-20 Freiburg     392   1122 #> 321 2020-03-21 Freiburg     390   1123 #> 325 2020-03-22 Freiburg     388   1125 #> 329 2020-03-23 Freiburg     386   1126 #> 333 2020-03-24 Freiburg     384   1128 #> 337 2020-03-25 Freiburg     382   1129 #> 341 2020-03-26 Freiburg     379   1130 #> 345 2020-03-27 Freiburg     377   1132 #> 349 2020-03-28 Freiburg     375   1133 #> 353 2020-03-29 Freiburg     433   1195 #> 357 2020-03-30 Freiburg     431   1196 #> 361 2020-03-31 Freiburg     429   1198 #> 365 2020-04-01 Freiburg     427   1199 #> 369 2020-04-02 Freiburg     425   1200 #> 373 2020-04-03 Freiburg     423   1202 #> 377 2020-04-04 Freiburg     421   1203 #> 381 2020-04-05 Freiburg     419   1205 #> 385 2020-04-06 Freiburg     417   1206 #> 389 2020-04-07 Freiburg     415   1208 #> 393 2020-04-08 Freiburg     413   1209 #> 397 2020-04-09 Freiburg     411   1211 #> 401 2020-04-10 Freiburg     409   1212 #> 405 2020-04-11 Freiburg     407   1213 #> 409 2020-04-12 Freiburg     405   1215 #> 413 2020-04-13 Freiburg     403   1216 #> 417 2020-04-14 Freiburg     401   1218 #> 421 2020-04-15 Freiburg     399   1219 #> 425 2020-04-16 Freiburg     397   1221 #> 429 2020-04-17 Freiburg     395   1222 #> 433 2020-04-18 Freiburg     394   1223 #> 437 2020-04-19 Freiburg     392   1225 #> 441 2020-04-20 Freiburg     390   1226 #> 445 2020-04-21 Freiburg     388   1228 #> 449 2020-04-22 Freiburg     386   1229 #> 453 2020-04-23 Freiburg     384   1231 #> 457 2020-04-24 Freiburg     383   1232 #> 461 2020-04-25 Freiburg     381   1234 #> 465 2020-04-26 Freiburg     379   1235 #> 469 2020-04-27 Freiburg     377   1236 #> 473 2020-04-28 Freiburg     376   1238 #> 477 2020-04-29 Freiburg     374   1239 #> 481 2020-04-30 Freiburg     372   1241 #> 485 2020-05-01 Freiburg     371   1242 #> 489 2020-05-02 Freiburg     369   1244 #> 493 2020-05-03 Freiburg     368   1245 #> 497 2020-05-04 Freiburg     366   1246 #> 501 2020-05-05 Freiburg     364   1248 #> 505 2020-05-06 Freiburg     363   1249 #> 509 2020-05-07 Freiburg     361   1251 #> 513 2020-05-08 Freiburg     360   1252 #> 517 2020-05-09 Freiburg     358   1253 #> 521 2020-05-10 Freiburg     357   1255 #> 525 2020-05-11 Freiburg     356   1256 #> 529 2020-05-12 Freiburg     354   1257 #> 533 2020-05-13 Freiburg     353   1259 #> 537 2020-05-14 Freiburg     352   1260 #> 541 2020-05-15 Freiburg     350   1261 #> 545 2020-05-16 Freiburg     349   1263 #> 549 2020-05-17 Freiburg     348   1264 #> 553 2020-05-18 Freiburg     347   1265 #> 557 2020-05-19 Freiburg     346   1267 #> 561 2020-05-20 Freiburg     345   1268 #> 565 2020-05-21 Freiburg     343   1269 #> 569 2020-05-22 Freiburg     342   1270 #> 573 2020-05-23 Freiburg     341   1271 #> 577 2020-05-24 Freiburg     340   1273 #> 581 2020-05-25 Freiburg     340   1274 #> 585 2020-05-26 Freiburg     339   1275 #> 589 2020-05-27 Freiburg     338   1276 #> 593 2020-05-28 Freiburg     337   1277 #> 597 2020-05-29 Freiburg     336   1278 #> 601 2020-05-30 Freiburg     335   1279 #> 605 2020-05-31 Freiburg     335   1280 #> 609 2020-06-01 Freiburg     334   1281 #> 613 2020-06-02 Freiburg     333   1282 #> 617 2020-06-03 Freiburg     333   1283 #> 621 2020-06-04 Freiburg     332   1284 #> 625 2020-06-05 Freiburg     332   1284 #> 629 2020-06-06 Freiburg     331   1285 #> 633 2020-06-07 Freiburg     331   1286 #> 637 2020-06-08 Freiburg     331   1287 #> 641 2020-06-09 Freiburg     330   1287 #> 645 2020-06-10 Freiburg     330   1288 #> 649 2020-06-11 Freiburg     330   1289 #> 653 2020-06-12 Freiburg     330   1289 #> 657 2020-06-13 Freiburg     329   1290 #> 661 2020-06-14 Freiburg     329   1290 #> 665 2020-06-15 Freiburg     329   1291 #> 669 2020-06-16 Freiburg     329   1291 #> 673 2020-06-17 Freiburg     329   1292 #> 677 2020-06-18 Freiburg     329   1292 #> 681 2020-06-19 Freiburg     329   1292 #> 685 2020-06-20 Freiburg     330   1293 #> 689 2020-06-21 Freiburg     330   1293 #> 693 2020-06-22 Freiburg     330   1293 #> 697 2020-06-23 Freiburg     330   1293 #> 701 2020-06-24 Freiburg     331   1293 #> 705 2020-06-25 Freiburg     331   1293 #> 709 2020-06-26 Freiburg     331   1293 #> 713 2020-06-27 Freiburg     332   1293 #> 717 2020-06-28 Freiburg     332   1293 #> 721 2020-06-29 Freiburg     333   1293 #> 725 2020-06-30 Freiburg     333   1293 #> 729 2020-07-01 Freiburg     334   1293 #> 733 2020-07-02 Freiburg     335   1292 #> 737 2020-07-03 Freiburg     335   1292 #> 741 2020-07-04 Freiburg     336   1292 #> 745 2020-07-05 Freiburg     337   1291 #> 749 2020-07-06 Freiburg     337   1291 #> 753 2020-07-07 Freiburg     338   1290 #> 757 2020-07-08 Freiburg     339   1290 #> 761 2020-07-09 Freiburg     340   1289 #> 765 2020-07-10 Freiburg     341   1289 #> 769 2020-07-11 Freiburg     342   1288 #> 773 2020-07-12 Freiburg     343   1287 #> 777 2020-07-13 Freiburg     344   1286 #> 781 2020-07-14 Freiburg     345   1286 #> 785 2020-07-15 Freiburg     346   1285 #> 789 2020-07-16 Freiburg     347   1284 #> 793 2020-07-17 Freiburg     348   1283 #> 797 2020-07-18 Freiburg     349   1282 #> 801 2020-07-19 Freiburg     350   1281 #> 805 2020-07-20 Freiburg     351   1280 #> 809 2020-07-21 Freiburg     352   1279 #> 813 2020-07-22 Freiburg     353   1278 #> 817 2020-07-23 Freiburg     355   1277 #> 821 2020-07-24 Freiburg     356   1276 #> 825 2020-07-25 Freiburg     357   1275 #> 829 2020-07-26 Freiburg     358   1274 #> 833 2020-07-27 Freiburg     359   1272 #> 837 2020-07-28 Freiburg     361   1271 #> 841 2020-07-29 Freiburg     362   1270 #> 845 2020-07-30 Freiburg     363   1268 #> 849 2020-07-31 Freiburg     365   1267 #> 853 2020-08-01 Freiburg     366   1266 #> 857 2020-08-02 Freiburg     367   1264 #> 861 2020-08-03 Freiburg     368   1263 #> 865 2020-08-04 Freiburg     370   1261 #> 869 2020-08-05 Freiburg     371   1260 #> 873 2020-08-06 Freiburg     372   1258 #> 877 2020-08-07 Freiburg     374   1257 #> 881 2020-08-08 Freiburg     375   1255 #> 885 2020-08-09 Freiburg     376   1253 #> 889 2020-08-10 Freiburg     378   1252 #> 893 2020-08-11 Freiburg     379   1250 #> 897 2020-08-12 Freiburg     381   1249 #> 901 2020-08-13 Freiburg     382   1247 #> 905 2020-08-14 Freiburg     383   1245 #> 909 2020-08-15 Freiburg     385   1243 #> 913 2020-08-16 Freiburg     386   1242 #> 917 2020-08-17 Freiburg     387   1240 #> 921 2020-08-18 Freiburg     389   1238 #> 925 2020-08-19 Freiburg     390   1236 #> 929 2020-08-20 Freiburg     391   1234 #> 933 2020-08-21 Freiburg     393   1233 #> 937 2020-08-22 Freiburg     394   1231 #> 941 2020-08-23 Freiburg     396   1229 #> 945 2020-08-24 Freiburg     397   1227 #> 949 2020-08-25 Freiburg     398   1225 #> 953 2020-08-26 Freiburg     400   1223 #> 957 2020-08-27 Freiburg     401   1221 #> 961 2020-08-28 Freiburg     402   1219 #> 965 2020-08-29 Freiburg     404   1217 #> 969 2020-08-30 Freiburg     405   1215 #> 973 2020-08-31 Freiburg     407   1213 #> 977 2020-09-01 Freiburg     408   1211 #> 981 2020-09-02 Freiburg     409   1209 #> 985 2020-09-03 Freiburg     411   1207 #> 989 2020-09-04 Freiburg     412   1205 #> 993 2020-09-05 Freiburg     413   1203 #> 997 2020-09-06 Freiburg     415   1201 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 116 rows ] # }"},{"path":"/reference/create_suntimes_rsts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","title":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","text":"Generate list two multi-layer SpatRasters given template indicate sunrise sunset respective cells. package suncalc required use function.","code":""},{"path":"/reference/create_suntimes_rsts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","text":"","code":"create_suntimes_rsts(   template,   dates = terra::time(template),   crs = \"EPSG:4258\",   tz = Sys.timezone(),   .quiet = FALSE )"},{"path":"/reference/create_suntimes_rsts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","text":"template (Multi-layer) SpatRaster determines spatial extent result. dates Dates processed. specified, dates template used terra::time(). crs Coordinate reference system longitude/latitude metrics. used project raster coordinates able retrieve longitude latitude. tz Timezone results. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/create_suntimes_rsts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","text":"list elements sunrise sunset multi-layer SpatRasters. values indicate respective time minutes. layer represents one date.","code":""},{"path":[]},{"path":"/reference/create_suntimes_rsts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create rasters that indicate sunrise and sunset — create_suntimes_rsts","text":"","code":"# \\donttest{ # calculate suntimes, use barrks_data()$tmin as template st <- create_suntimes_rsts(barrks_data()[[1]], .quiet = TRUE)  # plot results on May 1st, 2015 terra::plot(st$sunrise[[terra::time(st$sunrise) == '2015-05-01']])  terra::plot(st$sunset[[terra::time(st$sunset) == '2015-05-01']])  # }"},{"path":"/reference/get_development.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the beetles development — get_development_rst","title":"Get the beetles development — get_development_rst","text":"Get beetles development specific generations.value -1 implies generation present yet.","code":""},{"path":"/reference/get_development.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the beetles development — get_development_rst","text":"","code":"get_development_rst(pheno, generation, dates = prop_dates(pheno))  get_development_df(   pheno,   stations = prop_stations(pheno),   generation = prop_hatched_generations(pheno),   dates = prop_dates(pheno) )"},{"path":"/reference/get_development.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the beetles development — get_development_rst","text":"pheno  phenology (see phenology()) generation Generation interest. sister broods, 0.5 added. get_development_df() allows multiple generations . dates Select dates present output. stations Pass character vector choose stations assigned pheno names, pass different stations. See stations_create() details.","code":""},{"path":"/reference/get_development.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the beetles development — get_development_rst","text":"get_development_rst(): multi-layer SpatRaster. get_development_df(): data frame contains field generation  (gen_1, gen_1.5, gen_2, gen_2.5, ...) requested.","code":""},{"path":"/reference/get_development.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the beetles development — get_development_rst","text":"","code":"# \\donttest{ # calculate station-based phenology p <- phenology('phenips-clim', barrks_data('stations'), .quiet = TRUE)  # print the development data frame of station 'Freiburg' df <- get_development_df(p, 'Freiburg') df[,4:ncol(df)] <- round(df[,4:ncol(df)], 3) # round results df #>      station       date doy  gen_1 gen_1.5 gen_2 gen_2.5 gen_3 gen_3.5 #> 1   Freiburg 2011-01-01   1 -1.000      -1    -1      -1    -1      -1 #> 2   Freiburg 2011-01-02   2 -1.000      -1    -1      -1    -1      -1 #> 3   Freiburg 2011-01-03   3 -1.000      -1    -1      -1    -1      -1 #> 4   Freiburg 2011-01-04   4 -1.000      -1    -1      -1    -1      -1 #> 5   Freiburg 2011-01-05   5 -1.000      -1    -1      -1    -1      -1 #> 6   Freiburg 2011-01-06   6 -1.000      -1    -1      -1    -1      -1 #> 7   Freiburg 2011-01-07   7 -1.000      -1    -1      -1    -1      -1 #> 8   Freiburg 2011-01-08   8 -1.000      -1    -1      -1    -1      -1 #> 9   Freiburg 2011-01-09   9 -1.000      -1    -1      -1    -1      -1 #> 10  Freiburg 2011-01-10  10 -1.000      -1    -1      -1    -1      -1 #> 11  Freiburg 2011-01-11  11 -1.000      -1    -1      -1    -1      -1 #> 12  Freiburg 2011-01-12  12 -1.000      -1    -1      -1    -1      -1 #> 13  Freiburg 2011-01-13  13 -1.000      -1    -1      -1    -1      -1 #> 14  Freiburg 2011-01-14  14 -1.000      -1    -1      -1    -1      -1 #> 15  Freiburg 2011-01-15  15 -1.000      -1    -1      -1    -1      -1 #> 16  Freiburg 2011-01-16  16 -1.000      -1    -1      -1    -1      -1 #> 17  Freiburg 2011-01-17  17 -1.000      -1    -1      -1    -1      -1 #> 18  Freiburg 2011-01-18  18 -1.000      -1    -1      -1    -1      -1 #> 19  Freiburg 2011-01-19  19 -1.000      -1    -1      -1    -1      -1 #> 20  Freiburg 2011-01-20  20 -1.000      -1    -1      -1    -1      -1 #> 21  Freiburg 2011-01-21  21 -1.000      -1    -1      -1    -1      -1 #> 22  Freiburg 2011-01-22  22 -1.000      -1    -1      -1    -1      -1 #> 23  Freiburg 2011-01-23  23 -1.000      -1    -1      -1    -1      -1 #> 24  Freiburg 2011-01-24  24 -1.000      -1    -1      -1    -1      -1 #> 25  Freiburg 2011-01-25  25 -1.000      -1    -1      -1    -1      -1 #> 26  Freiburg 2011-01-26  26 -1.000      -1    -1      -1    -1      -1 #> 27  Freiburg 2011-01-27  27 -1.000      -1    -1      -1    -1      -1 #> 28  Freiburg 2011-01-28  28 -1.000      -1    -1      -1    -1      -1 #> 29  Freiburg 2011-01-29  29 -1.000      -1    -1      -1    -1      -1 #> 30  Freiburg 2011-01-30  30 -1.000      -1    -1      -1    -1      -1 #> 31  Freiburg 2011-01-31  31 -1.000      -1    -1      -1    -1      -1 #> 32  Freiburg 2011-02-01  32 -1.000      -1    -1      -1    -1      -1 #> 33  Freiburg 2011-02-02  33 -1.000      -1    -1      -1    -1      -1 #> 34  Freiburg 2011-02-03  34 -1.000      -1    -1      -1    -1      -1 #> 35  Freiburg 2011-02-04  35 -1.000      -1    -1      -1    -1      -1 #> 36  Freiburg 2011-02-05  36 -1.000      -1    -1      -1    -1      -1 #> 37  Freiburg 2011-02-06  37 -1.000      -1    -1      -1    -1      -1 #> 38  Freiburg 2011-02-07  38 -1.000      -1    -1      -1    -1      -1 #> 39  Freiburg 2011-02-08  39 -1.000      -1    -1      -1    -1      -1 #> 40  Freiburg 2011-02-09  40 -1.000      -1    -1      -1    -1      -1 #> 41  Freiburg 2011-02-10  41 -1.000      -1    -1      -1    -1      -1 #> 42  Freiburg 2011-02-11  42 -1.000      -1    -1      -1    -1      -1 #> 43  Freiburg 2011-02-12  43 -1.000      -1    -1      -1    -1      -1 #> 44  Freiburg 2011-02-13  44 -1.000      -1    -1      -1    -1      -1 #> 45  Freiburg 2011-02-14  45 -1.000      -1    -1      -1    -1      -1 #> 46  Freiburg 2011-02-15  46 -1.000      -1    -1      -1    -1      -1 #> 47  Freiburg 2011-02-16  47 -1.000      -1    -1      -1    -1      -1 #> 48  Freiburg 2011-02-17  48 -1.000      -1    -1      -1    -1      -1 #> 49  Freiburg 2011-02-18  49 -1.000      -1    -1      -1    -1      -1 #> 50  Freiburg 2011-02-19  50 -1.000      -1    -1      -1    -1      -1 #> 51  Freiburg 2011-02-20  51 -1.000      -1    -1      -1    -1      -1 #> 52  Freiburg 2011-02-21  52 -1.000      -1    -1      -1    -1      -1 #> 53  Freiburg 2011-02-22  53 -1.000      -1    -1      -1    -1      -1 #> 54  Freiburg 2011-02-23  54 -1.000      -1    -1      -1    -1      -1 #> 55  Freiburg 2011-02-24  55 -1.000      -1    -1      -1    -1      -1 #> 56  Freiburg 2011-02-25  56 -1.000      -1    -1      -1    -1      -1 #> 57  Freiburg 2011-02-26  57 -1.000      -1    -1      -1    -1      -1 #> 58  Freiburg 2011-02-27  58 -1.000      -1    -1      -1    -1      -1 #> 59  Freiburg 2011-02-28  59 -1.000      -1    -1      -1    -1      -1 #> 60  Freiburg 2011-03-01  60 -1.000      -1    -1      -1    -1      -1 #> 61  Freiburg 2011-03-02  61 -1.000      -1    -1      -1    -1      -1 #> 62  Freiburg 2011-03-03  62 -1.000      -1    -1      -1    -1      -1 #> 63  Freiburg 2011-03-04  63 -1.000      -1    -1      -1    -1      -1 #> 64  Freiburg 2011-03-05  64 -1.000      -1    -1      -1    -1      -1 #> 65  Freiburg 2011-03-06  65 -1.000      -1    -1      -1    -1      -1 #> 66  Freiburg 2011-03-07  66 -1.000      -1    -1      -1    -1      -1 #> 67  Freiburg 2011-03-08  67 -1.000      -1    -1      -1    -1      -1 #> 68  Freiburg 2011-03-09  68 -1.000      -1    -1      -1    -1      -1 #> 69  Freiburg 2011-03-10  69 -1.000      -1    -1      -1    -1      -1 #> 70  Freiburg 2011-03-11  70 -1.000      -1    -1      -1    -1      -1 #> 71  Freiburg 2011-03-12  71 -1.000      -1    -1      -1    -1      -1 #> 72  Freiburg 2011-03-13  72 -1.000      -1    -1      -1    -1      -1 #> 73  Freiburg 2011-03-14  73 -1.000      -1    -1      -1    -1      -1 #> 74  Freiburg 2011-03-15  74 -1.000      -1    -1      -1    -1      -1 #> 75  Freiburg 2011-03-16  75 -1.000      -1    -1      -1    -1      -1 #> 76  Freiburg 2011-03-17  76 -1.000      -1    -1      -1    -1      -1 #> 77  Freiburg 2011-03-18  77 -1.000      -1    -1      -1    -1      -1 #> 78  Freiburg 2011-03-19  78 -1.000      -1    -1      -1    -1      -1 #> 79  Freiburg 2011-03-20  79 -1.000      -1    -1      -1    -1      -1 #> 80  Freiburg 2011-03-21  80 -1.000      -1    -1      -1    -1      -1 #> 81  Freiburg 2011-03-22  81 -1.000      -1    -1      -1    -1      -1 #> 82  Freiburg 2011-03-23  82 -1.000      -1    -1      -1    -1      -1 #> 83  Freiburg 2011-03-24  83 -1.000      -1    -1      -1    -1      -1 #> 84  Freiburg 2011-03-25  84  0.000      -1    -1      -1    -1      -1 #> 85  Freiburg 2011-03-26  85  0.000      -1    -1      -1    -1      -1 #> 86  Freiburg 2011-03-27  86  0.000      -1    -1      -1    -1      -1 #> 87  Freiburg 2011-03-28  87  0.000      -1    -1      -1    -1      -1 #> 88  Freiburg 2011-03-29  88  0.000      -1    -1      -1    -1      -1 #> 89  Freiburg 2011-03-30  89  0.000      -1    -1      -1    -1      -1 #> 90  Freiburg 2011-03-31  90  0.000      -1    -1      -1    -1      -1 #> 91  Freiburg 2011-04-01  91  0.002      -1    -1      -1    -1      -1 #> 92  Freiburg 2011-04-02  92  0.012      -1    -1      -1    -1      -1 #> 93  Freiburg 2011-04-03  93  0.032      -1    -1      -1    -1      -1 #> 94  Freiburg 2011-04-04  94  0.045      -1    -1      -1    -1      -1 #> 95  Freiburg 2011-04-05  95  0.060      -1    -1      -1    -1      -1 #> 96  Freiburg 2011-04-06  96  0.079      -1    -1      -1    -1      -1 #> 97  Freiburg 2011-04-07  97  0.090      -1    -1      -1    -1      -1 #> 98  Freiburg 2011-04-08  98  0.107      -1    -1      -1    -1      -1 #> 99  Freiburg 2011-04-09  99  0.121      -1    -1      -1    -1      -1 #> 100 Freiburg 2011-04-10 100  0.133      -1    -1      -1    -1      -1 #> 101 Freiburg 2011-04-11 101  0.144      -1    -1      -1    -1      -1 #> 102 Freiburg 2011-04-12 102  0.155      -1    -1      -1    -1      -1 #> 103 Freiburg 2011-04-13 103  0.165      -1    -1      -1    -1      -1 #> 104 Freiburg 2011-04-14 104  0.174      -1    -1      -1    -1      -1 #> 105 Freiburg 2011-04-15 105  0.185      -1    -1      -1    -1      -1 #> 106 Freiburg 2011-04-16 106  0.196      -1    -1      -1    -1      -1 #> 107 Freiburg 2011-04-17 107  0.207       0    -1      -1    -1      -1 #> 108 Freiburg 2011-04-18 108  0.216       0    -1      -1    -1      -1 #> 109 Freiburg 2011-04-19 109  0.228       0    -1      -1    -1      -1 #> 110 Freiburg 2011-04-20 110  0.240       0    -1      -1    -1      -1 #> 111 Freiburg 2011-04-21 111  0.253       0    -1      -1    -1      -1 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 254 rows ] # }"},{"path":"/reference/get_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Get onset, diapause or mortality — get_onset_rst","title":"Get onset, diapause or mortality — get_onset_rst","text":"Get onset, diapause mortality day year raw output. Note multiple mortality events possible season.","code":""},{"path":"/reference/get_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get onset, diapause or mortality — get_onset_rst","text":"","code":"get_onset_rst(pheno, as_doy = TRUE, dates = prop_dates(pheno))  get_onset_df(   pheno,   stations = prop_stations(pheno),   as_doy = TRUE,   dates = prop_dates(pheno) )  get_diapause_rst(pheno, as_doy = TRUE, dates = prop_dates(pheno))  get_diapause_df(   pheno,   stations = prop_stations(pheno),   as_doy = TRUE,   dates = prop_dates(pheno) )  get_mortality_rst(pheno, as_doy = TRUE, dates = prop_dates(pheno))  get_mortality_df(   pheno,   stations = prop_stations(pheno),   as_doy = TRUE,   dates = prop_dates(pheno) )"},{"path":"/reference/get_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get onset, diapause or mortality — get_onset_rst","text":"pheno  phenology (see phenology()) as_doy TRUE, day(s) year returned. FALSE phenological events returned raw format. , return value used input phenology()/bso_phenology() (parameters .onset, .diapause .mortality). dates Select dates present output. stations Pass character vector choose stations assigned pheno names, pass different stations. See stations_create() details.","code":""},{"path":"/reference/get_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get onset, diapause or mortality — get_onset_rst","text":"get_onset_rst(), get_diapause_rst(), get_mortality_rst(): (multi-layer) SpatRaster. get_onset_df(), get_diapause_df(), get_mortality_df(): data frame.","code":""},{"path":"/reference/get_events.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get onset, diapause or mortality — get_onset_rst","text":"get_onset_rst(): Returns (multi-layer) SpatRaster onset. get_onset_df(): Returns data frame onset. get_diapause_rst(): Returns (multi-layer) SpatRaster diapause. get_diapause_df(): Returns data frame diapause. get_mortality_rst(): Returns (multi-layer) SpatRaster mortality. get_mortality_df(): Returns data frame mortality.","code":""},{"path":"/reference/get_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get onset, diapause or mortality — get_onset_rst","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data(), .quiet = TRUE)  # plot onset, diapause, mortality get_onset_rst(p) |> terra::plot()  get_diapause_rst(p) |> terra::plot()  get_mortality_rst(p)[[1]] |> terra::plot()   # }"},{"path":"/reference/get_generations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get generations — get_generations_rst","title":"Get generations — get_generations_rst","text":"Find many generations present (reached development threshold).","code":""},{"path":"/reference/get_generations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get generations — get_generations_rst","text":"","code":"get_generations_rst(   pheno,   dates = prop_last_date(pheno),   threshold = 0,   generations = prop_hatched_generations(pheno),   categorical = TRUE,   colors = barrks_colors(\"raster\"),   labels = barrks_labels(\"raster\") )  get_generations_df(   pheno,   stations = prop_stations(pheno),   dates = prop_dates(pheno),   threshold = 0,   generations = prop_hatched_generations(pheno) )  get_hibernating_generations_rst(   pheno,   categorical = TRUE,   colors = barrks_colors(\"raster\"),   labels = barrks_labels(\"raster\") )  get_hibernating_generations_df(pheno, stations = prop_stations(pheno))"},{"path":"/reference/get_generations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get generations — get_generations_rst","text":"pheno  phenology (see phenology()) dates Select dates present output. threshold Threshold beetle development account generation. generations Numeric vector determines generations included result. categorical Set FALSE SpatRaster returned numeric. Otherwise, categorical. colors, labels Vectors colors/labels starting zero generations followed consecutively elements respective generations (including sister broods). stations Pass character vector choose stations assigned pheno names, pass different stations. See stations_create() details.","code":""},{"path":"/reference/get_generations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get generations — get_generations_rst","text":"get_generations_rst(): multi-layer SpatRaster. get_hibernating_generations_rst(): SpatRaster. available model's end date reached. Otherwise values NA. get_generations_df(): data frame. get_hibernating_generations_df(): data frame. available model's end date reached. Otherwise values NA.","code":""},{"path":"/reference/get_generations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get generations — get_generations_rst","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data(), .quiet = TRUE)  # get the generations raster gens <- get_generations_rst(p)  # plot the generations raster terra::plot(gens)  # }"},{"path":"/reference/get_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get (preprocessed) input data — get_input_data","title":"Get (preprocessed) input data — get_input_data","text":"function returns list contains input data phenology well intermediate results needed preprocessed inputs model. result can used input phenology() avoid redundant calculations.","code":""},{"path":"/reference/get_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get (preprocessed) input data — get_input_data","text":"","code":"get_input_data(pheno)"},{"path":"/reference/get_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get (preprocessed) input data — get_input_data","text":"pheno  phenology (see phenology())","code":""},{"path":"/reference/get_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get (preprocessed) input data — get_input_data","text":"list SpatRasters.","code":""},{"path":"/reference/get_input_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get (preprocessed) input data — get_input_data","text":"","code":"# \\donttest{ # setup phenology p <- phenology('phenips-clim', barrks_data(), .setup_only = TRUE, .quiet = TRUE)  # get the (preprocessed) input data inputs <- get_input_data(p)  # print the names to show which input data is available names(inputs) #>  [1] \"daylength\" \"rad\"       \"sunrise\"   \"sunset\"    \"tmax\"      \"tmean\"     #>  [7] \"tmin\"      \"dd_onset\"  \"btmean\"    \"btmax\"     \"teff\"      \"fly\"       # }"},{"path":"/reference/list_models.html","id":null,"dir":"Reference","previous_headings":"","what":"List all models — list_models","title":"List all models — list_models","text":"Get names available models.","code":""},{"path":"/reference/list_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all models — list_models","text":"","code":"list_models()"},{"path":"/reference/list_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all models — list_models","text":"","code":"# print all available models list_models() #> [1] \"bso\"          \"phenips\"      \"rity\"         \"chapy\"        \"joensson\"     #> [6] \"lange\"        \"phenips-clim\""},{"path":"/reference/model.bso.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the BSO model — model.bso.apply","title":"Use the BSO model — model.bso.apply","text":"page describes usage BSO model phenology(). model-specific inputs listed basic functionality explained. BSO model published Jakoby et al. (2019)  parametrized Ips typographus Switzerland. Note onset development submodel support usage storage (except precalculations).","code":""},{"path":"/reference/model.bso.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the BSO model — model.bso.apply","text":"... See phenology() detailled description function. tmin, tmax Daily minimum/maximum air temperatures °C. sunrise, sunset Time sunrise/sunset minutes midnight. Can created create_suntimes_rsts() create_suntimes_df(). n number individuals simulate. max_generations maximum number generations calculate.","code":""},{"path":"/reference/model.bso.apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the BSO model — model.bso.apply","text":"function returns BSO phenology. Look find can analysed.","code":""},{"path":"/reference/model.bso.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use the BSO model — model.bso.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply BSO model additional parameters available.","code":"bso_phenology(\"bso\", ..., tmin, tmax, sunrise, sunset,               n = 1e+09, max_generations = 4)  # calculate submodels separately bso_phenology(\"bso\", ..., .submodels = 'onset',               tmin, tmax, sunrise, sunset, n = 1e+09) bso_phenology(\"bso\", ..., .submodels = 'diapause', tmin, tmax) bso_phenology(\"bso\", ..., .submodels = 'development',               .onset, .diapause = NULL, .mortality = NULL,               tmin, tmax, sunrise, sunset,               max_generations = 4)"},{"path":"/reference/model.bso.apply.html","id":"functioning-of-the-bso","dir":"Reference","previous_headings":"","what":"Functioning of the BSO","title":"Use the BSO model — model.bso.apply","text":"following, basic functioning BSO model explained. Onset: onset swarming start degree days mean temperature reach specific threshold regeneration feeding individuals finished (Look development details). Development: development single individuals simulated. simulation individual realized passing multitude slots grouped stages. hourly probability individual enter next slot depends current stage phloem temperature. hourly temperature derived minimum maximum temperatures using sine interpolition. hourly phloem temperature calculated using Newton's Law Cooling (see Trân et al. 2007 ). Diapause: Specific photoperiod-related dates define diapause initiated earliest latest. dates, diapause initiated mean temperature falls specific threshold. Mortality: BSO model mortality submodel implemented. Look find model parameters affect actual calculations values used default.","code":""},{"path":"/reference/model.bso.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use the BSO model — model.bso.apply","text":"Jakoby O, Lischke H, Wermelinger B (2019). “Climate change alters elevational phenology patterns European spruce bark beetle (Ips typographus).” Global Change Biology, 25(12), 4048-4063. doi:10.1111/gcb.14766 . Trân JK, Ylioja T, Billings RF, Régnière J, Ayres MP (2007). “Impact minimum winter temperatures population dynamics Dendroctonus frontalis.” Ecological Applications, 17(3), 882-899. doi:10.1890/06-0512 .","code":""},{"path":[]},{"path":"/reference/model.bso.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize the BSO model — model.bso.customize","title":"Customize the BSO model — model.bso.customize","text":"page describes parameters can used customize BSO model. model developed Jakoby et al. (2019) . Look find apply model.","code":""},{"path":"/reference/model.bso.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize the BSO model — model.bso.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. dd_onset_threshold Degree days required individuals start regeneration feeding slot_dia maturation stage. regeneration feeding finished, onset triggered. slot_dia Maturation feeding slot individuals start regeneration feeding diapause. k Factor calculation phloem temperature. alpha, tlo, tup Parameters used calculate transition probabilities stage (except preflight) following order: development, maturation feeding, reproduction. tfly_min, tfly_max, pfly_max, beta Parameters used calculate transition probabilities preflight stage. num_slots Named vector defines number slots stage. development stage subdivided stages egg, larva pupa. psis Probability sister brood established. slot_sis Maturation feeding slot individuals start regeneration feeding establish sister brood. model_end_date Date model ends (development modeled). diapause_first day year diapause start earliest. diapause_last day year diapause start latest. tdia_min diapause initiated average daily temperature falls value.","code":""},{"path":"/reference/model.bso.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize the BSO model — model.bso.customize","text":"barrks, model() used customize model. following code illustrates parameters available BSO model specifies default values.","code":"model(\"bso\",        # ==== onset ====        dd_onset_start_date = '01-01',       dd_onset_base = 5.124198,       dd_onset_threshold = 100,       slot_dia = 6,        # ==== onset + development ====        k = 2.853738e-02,       alpha = c(2.549060e-05, 0.0000789, 1.009450e-05),       tlo = c(-1.297644e+01, 4.760089e+00, -4.424628e+00),       tup = c(3.600070e+01, 4.002483e+01, 3.999390e+01),       tfly_min = 16.1064,       tfly_max = 31.2901,       pfly_max = 9.863263e-03,       beta = 1.363763,        num_slots = c(         'reproduction' = 11,         'egg' = 18,         'larva' = 45,         'pupa' = 8,         'maturation' = 8,         'preflight' = 1       ),        # ==== development ====        psis = 2.994450e-01,       slot_sis = 4,        model_end_date = '12-30',        # ==== diapause ====        diapause_first = 210,       diapause_last = 232,       tdia_min = 1.645209e+01 )"},{"path":"/reference/model.bso.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize the BSO model — model.bso.customize","text":"Jakoby O, Lischke H, Wermelinger B (2019). “Climate change alters elevational phenology patterns European spruce bark beetle (Ips typographus).” Global Change Biology, 25(12), 4048-4063. doi:10.1111/gcb.14766 .","code":""},{"path":[]},{"path":"/reference/model.chapy.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use CHAPY — model.chapy.apply","title":"Use CHAPY — model.chapy.apply","text":"page describes usage CHAPY phenology(). model specific inputs listed basic functionality explained. CHAPY published Ogris et al. (2020)  parametrized Pityogenes chalcographus Slovenia.","code":""},{"path":"/reference/model.chapy.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use CHAPY — model.chapy.apply","text":"tmin, tmean, tmax Daily minimum/mean/maximum air temperatures °C. development submodel, parameter obligatory depends mode. daylength Length day hours. Can created create_daylength_rst() create_daylength_rst(). mode Specifies temperature used calculate development. Can min, mean max. .submodels, .onset, .diapause, .mortality, ... See phenology() detailled description function.","code":""},{"path":"/reference/model.chapy.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use CHAPY — model.chapy.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply CHAPY additional parameters available.","code":"phenology(\"chapy\", ..., tmin = NULL, tmean = NULL, tmax, daylength, mode = 'max')  # calculate submodels separately phenology(\"chapy\", ..., .submodels = 'onset', tmax) phenology(\"chapy\", ..., .submodels = 'diapause', daylength) phenology(\"chapy\", ..., .submodels = 'mortality', tmax) phenology(\"chapy\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmin = NULL, tmean = NULL, tmax = NULL, mode = 'max')"},{"path":"/reference/model.chapy.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use CHAPY — model.chapy.apply","text":"functioning CHAPY identical RITY different parametrization.","code":""},{"path":"/reference/model.chapy.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use CHAPY — model.chapy.apply","text":"Ogris N, Ferlan M, Hauptman T, Pavlin R, Kavčič , Jurc M, de Groot M (2020). “Sensitivity analysis, calibration validation phenology model Pityogenes chalcographus (CHAPY).” Ecological Modelling, 430, 109137. ISSN 0304-3800, doi:10.1016/j.ecolmodel.2020.109137 .","code":""},{"path":[]},{"path":"/reference/model.chapy.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize CHAPY — model.chapy.customize","title":"Customize CHAPY — model.chapy.customize","text":"page describes parameters can used customize CHAPY. model developed Ogris et al. (2020) . Look find apply model.","code":""},{"path":"/reference/model.chapy.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize CHAPY — model.chapy.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. dd_onset_threshold Degree days required trigger onset infestation. Additionally, maximum temperature must exceed tfly. tfly Minimum temperature beetles need fly. dd_development_base Base temperature calculate degree days development. dd_total_dev Degree days required generation fully develop dev_start, dev_end Share total development egg development starts juvenile beetle's development ends respectively. Usable development /thresholds account mating, oviposition etc. dev_sister_brood Share total development, sister brood established. dev_mortal_min, dev_mortal_max beetles considered white stages (egg, larva, pupa) development exceeds dev_mortal_min subceeds dev_mortal_max. stages, beetles die caused mortality event. NULL means lower/upper threshold defined. func_ftmin, func_ftmean, func_ftmax Functions caclulate air temperature forest stands (see Ogris et al. 2019 , equations 1 - 3). parameter passed SpatRaster: tmin: min air temperature tmean: mean air temperature tmax: maximum air temperature func_btmin, func_btmean, func_btmax Functions caclulate bark temperature (see Ogris et al. 2019 , equations 4 - 6). parameter passed SpatRaster: ftmin: min air temperature forest stands ftmean: mean air temperature forest stands ftmax: maximum air temperature forest stands dt_low, dt_up, topt, tmax, alpha, beta, gamma Parameters calculate effective bark temperature (see Ogris et al. 2020 , equations .7 - .9). model_end_date Date model ends (development modeled). daylength_dia daylength falls threshold, diapause initiated. mortality_date Date white stages (egg, larva, pupa) die.","code":""},{"path":"/reference/model.chapy.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize CHAPY — model.chapy.customize","text":"barrks, model() used customize model. following code illustrates parameters available CHAPY specifies default values.","code":"model(\"chapy\",        # ==== onset ====        dd_onset_start_date = '03-09',       dd_onset_base = 7.4,       dd_onset_threshold = 216.5,        # ==== onset + development ====        tfly = 15.6,        # ==== development ====        dd_development_base = 7.4,       dd_total_dev = 635.4,       dev_start = 0,       dev_end = 1,       dev_sister_brood = 0.5,       dev_mortal_min = NULL,       dev_mortal_max = 0.8,        func_ftmin = function(tmin) { 1.44 + 0.82 * tmin },       func_ftmean = function(tmean) { 0.50 + 0.81 * tmean },       func_ftmax = function(tmax) { 1.03 + 0.86 * tmax },        func_btmin = function(atmin) { 0.56 + 0.99 * atmin },       func_btmean = function(atmean) { -0.48 + 1.03 * atmean },       func_btmax = function(atmax) { 0.03 + 0.99 * atmax },        dt_low = 7.4,       dt_up = 39.4,       topt = 30,       tmax = 41.97,       alpha = 0.031,       beta = 5.3,       gamma = 1.25,        model_end_date = '12-31',        # ==== diapause ====        daylength_dia = 13.6,        # ==== mortality ====        mortality_date = '12-31' )"},{"path":"/reference/model.chapy.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize CHAPY — model.chapy.customize","text":"Ogris N, Ferlan M, Hauptman T, Pavlin R, Kavčič , Jurc M, De Groot M (2019). “RITY--phenology model Ips typographus tool optimization monitoring.” Ecological Modelling, 410, 108775. doi:10.1016/j.ecolmodel.2019.108775 . Ogris N, Ferlan M, Hauptman T, Pavlin R, Kavčič , Jurc M, de Groot M (2020). “Sensitivity analysis, calibration validation phenology model Pityogenes chalcographus (CHAPY).” Ecological Modelling, 430, 109137. ISSN 0304-3800, doi:10.1016/j.ecolmodel.2020.109137 .","code":""},{"path":[]},{"path":"/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a phenology model — model","title":"Get a phenology model — model","text":"Returns (customized) phenology model.","code":""},{"path":"/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a phenology model — model","text":"","code":"model(m, ...)"},{"path":"/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a phenology model — model","text":"m Name model return value another model()-call. ... List parameters customize model.","code":""},{"path":"/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a phenology model — model","text":"phenology model. Can passed phenology().","code":""},{"path":[]},{"path":"/reference/model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a phenology model — model","text":"","code":"# \\donttest{ # customize the temperature beetles need to fly for PHENIPS-Clim m <- model('phenips-clim', tfly = 16)  # calculate phenology p <- phenology(m, barrks_data(), .quiet = TRUE)  # plot generations gens <- get_generations_rst(p) terra::plot(gens)  # }"},{"path":"/reference/model.joensson.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the Jönnson model — model.joensson.apply","title":"Use the Jönnson model — model.joensson.apply","text":"page describes usage Jönsson model phenology(). model specific inputs listed basic functionality explained. Jönsson model published Jönsson et al. (2011)  parametrized Ips typographus southern Sweden.","code":""},{"path":"/reference/model.joensson.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the Jönnson model — model.joensson.apply","text":"... See phenology() detailled description function. tmean, tmax Daily mean/maximum temperatures °C. daylength Length day hours. Can created create_daylength_rst() create_daylength_rst(). mode Can 'fast' (default) 'slow'. Determines lower ('fast') upper ('slow') limit development  genertion used.","code":""},{"path":"/reference/model.joensson.apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the Jönnson model — model.joensson.apply","text":"function returns phenology. Look find can analysed.","code":""},{"path":"/reference/model.joensson.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use the Jönnson model — model.joensson.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply Jönsson model additional parameters available.","code":"phenology(\"joensson\", ..., tmean, tmax, daylength, mode = 'fast')  # calculate submodels separately phenology(\"joensson\", ..., .submodels = 'onset', tmax) phenology(\"joensson\", ..., .submodels = 'diapause', tmax, daylength) phenology(\"joensson\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmean, mode = 'fast')"},{"path":"/reference/model.joensson.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use the Jönnson model — model.joensson.apply","text":"following, basic functioning Jönsson model explained. Onset: onset swarming triggerd degree days maximum temperature reach specific threshold maximum temperature exceeds minimum flight temperature. onset infestation triggered seven days later account pre-oviposition period. Development: development progresses proportional degree days mean temperature. account varying sun exposures, two different thermal thresholds defined reflect lower upper limit development. generations starts swarming finished development maximum temperature exceeds minimum flight temperature. Seven days later, development new generation starts. Diapause: diapause initiated daylength falls threshold. recommended adjust daylength threshold applying elsewhere (e.g. values literature). Jönsson et al. (2011)  proposes model calculate daylength threshold based long-term climate data. Mortality: Jönsson model mortality submodel implemented. Look find model parameters affect actual calculations values used default.","code":""},{"path":"/reference/model.joensson.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use the Jönnson model — model.joensson.apply","text":"Jönsson , Harding S, Krokene P, Lange H, Lindeloew , Oekland B, Ravn HP, Schroeder LM (2011). “Modelling potential impact global warming Ips typographus voltinism reproductive diapause.” Climatic Change, 109, 695-718. doi:10.1007/s10584-011-0038-4 .","code":""},{"path":[]},{"path":"/reference/model.joensson.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize the Jönsson model — model.joensson.customize","title":"Customize the Jönsson model — model.joensson.customize","text":"page describes parameters can used customize Jönsson model. model developed Jönsson et al. (2011) . Look find apply model.","code":""},{"path":"/reference/model.joensson.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize the Jönsson model — model.joensson.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. dd_onset_threshold Degree days required trigger onset infestation. Additionally, maximum temperature must exceed tfly. tfly Minimum temperature beetles need fly. dd_development_base Base temperature calculate degree days development. dd_total_dev_lower, dd_total_dev_upper Lower/upper limit degree days required generation fully develop dev_start, dev_end Share total development egg development starts juvenile beetle's development ends respectively. Usable development /thresholds account mating, oviposition etc. dev_mortal_min, dev_mortal_max beetles considered white stages (egg, larva, pupa) development exceeds dev_mortal_min subceeds dev_mortal_max. stages, beetles die caused mortality event. NULL means lower/upper threshold defined. model_end_date Date model ends (development modeled). daylength_dia, tdia_min daylength falls daylength_dia average daily temperature falls tdia_min, diapause initiated. default value critical daylength set 19.3 hours according Schroeder Dalin (2017)  examined photoperiodic diapause induction Sweden. model used regions, value adjusted.","code":""},{"path":"/reference/model.joensson.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize the Jönsson model — model.joensson.customize","text":"barrks, model() used customize model. following code illustrates parameters available Jönsson model specifies default values.","code":"model(\"joensson\",        # ==== onset ====        dd_onset_start_date = '01-01',       dd_onset_base = 5,       dd_onset_threshold = 120,        # ==== onset + development ====        tfly = 20,        # ==== development ====        dd_development_base = 5,       dd_total_dev_lower = 625,       dd_total_dev_upper = 750,       dev_start = 0,       dev_end = 1,       dev_mortal_min = NULL,       dev_mortal_max = NULL,        model_end_date = '12-31',        # ==== diapause ====        daylength_dia = 19.3,       tdia_min = 15 )"},{"path":"/reference/model.joensson.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize the Jönsson model — model.joensson.customize","text":"Jönsson , Harding S, Krokene P, Lange H, Lindeloew , Oekland B, Ravn HP, Schroeder LM (2011). “Modelling potential impact global warming Ips typographus voltinism reproductive diapause.” Climatic Change, 109, 695-718. doi:10.1007/s10584-011-0038-4 . Schroeder M, Dalin P (2017). “Differences photoperiod-induced diapause plasticity among different populations bark beetle Ips typographus predator Thanasimus formicarius.” Agricultural Forest Entomology, 19(2), 146-153. doi:10.1111/afe.12189 .","code":""},{"path":[]},{"path":"/reference/model.lange.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the Lange model — model.lange.apply","title":"Use the Lange model — model.lange.apply","text":"page describes usage Lange model phenology(). model specific inputs listed basic functionality explained. model published Lange et al. (2006)  Ips typographus.","code":""},{"path":"/reference/model.lange.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the Lange model — model.lange.apply","text":"tmin, tmean, tmax Daily minimum/mean/maximum temperatures °C. .submodels, .onset, .diapause, .mortality, ... See phenology() detailled description function.","code":""},{"path":"/reference/model.lange.apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the Lange model — model.lange.apply","text":"function returns phenology. Look find can analysed.","code":""},{"path":"/reference/model.lange.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use the Lange model — model.lange.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply Lange model additional parameters available.","code":"phenology(\"lange\", ..., tmin, tmean, tmax)  # calculate submodels separately phenology(\"lange\", ..., .submodels = 'onset', tmean, tmax) phenology(\"lange\", ..., .submodels = 'mortality', tmin) phenology(\"lange\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmean, tmax)"},{"path":"/reference/model.lange.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use the Lange model — model.lange.apply","text":"following, basic functioning Lange model explained. Onset: onset swarming triggerd degree days maximum temperature reach specific threshold maximum temperature exceeds minimum flight temperature according Annila (1969) . Development: development calculated using stage-specific temperature sums thresholds (Wermelinger Seifert 1998) . new generation starts development last generation finished development maximum temperature exceeds minimum flight temperature. Diapause: Lange model diapause submodel implemented. Mortality: White stages (egg pupa) die minimum temperature falls specific threshold. Look find model parameters affect actual calculations values used default.","code":""},{"path":"/reference/model.lange.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use the Lange model — model.lange.apply","text":"Annila E (1969). “Influence temperature upon development voltinism Ips typographus L. (Coleoptera, Scolytidae).” Annales Zoologici Fennici, 6(2), 161--208. http://www.jstor.org/stable/23731366. Lange H, Oekland B, Krokene P (2006). “Thresholds life cycle spruce bark beetle climate change.” Interjournal Complex Syst., 1648. Wermelinger B, Seifert M (1998). “Analysis temperature dependent development spruce bark beetle Ips typographus (L) (Col., Scolytidae).” Journal Applied Entomology, 122(1-5), 185-191. doi:10.1111/j.1439-0418.1998.tb01482.x .","code":""},{"path":[]},{"path":"/reference/model.lange.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize the Lange model — model.lange.customize","title":"Customize the Lange model — model.lange.customize","text":"page describes parameters can used customize Lange. model developed Lange et al. (2006) . Look find apply model.","code":""},{"path":"/reference/model.lange.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize the Lange model — model.lange.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. dd_onset_threshold Degree days required trigger onset infestation. Additionally, maximum temperature must exceed tfly. tfly Minimum temperature beetles need fly. dd_base_stages Base temperatures calculate degree days different stages following order: egg, larva, pupa, juvenile adult. dd_threshold_stages Thermal thresholds different stages following order: egg, larva, pupa, juvenile adult. model_end_date Date model ends (development modeled). first_lethal_date Date mortality modeled. tlethal Temperature threshold white stages (egg, larva, pupa) die.","code":""},{"path":"/reference/model.lange.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize the Lange model — model.lange.customize","text":"barrks, model() used customize model. following code illustrates parameters available Lange model specifies default values.","code":"model(\"lange\",        # ==== onset ==== #        dd_onset_start_date = '01-01',       dd_onset_base = 5,       dd_onset_threshold = 110,        # ==== onset + development ====        tfly = 19.5,        # ==== development ==== #        dd_base_stages = c(10.6, 8.2, 9.9, 3.2),       dd_threshold_stages = c(51.8, 204.4, 57.7, 238.5),        model_end_date = '12-31',        # ==== mortality ==== #        first_lethal_date = '09-01',       tlethal = 0 )"},{"path":"/reference/model.lange.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize the Lange model — model.lange.customize","text":"Lange H, Oekland B, Krokene P (2006). “Thresholds life cycle spruce bark beetle climate change.” Interjournal Complex Syst., 1648.","code":""},{"path":[]},{"path":"/reference/model.phenips.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use PHENIPS — model.phenips.apply","title":"Use PHENIPS — model.phenips.apply","text":"page describes usage PHENIPS phenology(). model specific inputs listed basic functionality explained. PHENIPS published Baier et al. (2007)  parametrized Kalkalpen National Park Austria Ips typographus.","code":""},{"path":"/reference/model.phenips.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use PHENIPS — model.phenips.apply","text":"... See phenology() detailled description function. tmean, tmax Daily mean/maximum temperatures °C. rad Daily radiation W * h / m^2. daylength Length day hours. Can created create_daylength_rst() create_daylength_rst(). exposure Specifies sun exposure. Can 'sunny' (default) 'shaded'. sister_broods Set FALSE sister broods calculated.","code":""},{"path":"/reference/model.phenips.apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use PHENIPS — model.phenips.apply","text":"function returns phenology. Look find can analysed.","code":""},{"path":"/reference/model.phenips.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use PHENIPS — model.phenips.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply PHENIPS additional parameters available.","code":"phenology(\"phenips\", ..., tmean, tmax, rad, daylength,           exposure = 'sunny', sister_broods = TRUE)  # calculate submodels separately phenology(\"phenips\", ..., .submodels = 'onset', tmax) phenology(\"phenips\", ..., .submodels = 'diapause', daylength) phenology(\"phenips\", ..., .submodels = 'mortality', tmax) phenology(\"phenips\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmean, tmax, rad,           exposure = 'sunny', sister_broods = TRUE)"},{"path":"/reference/model.phenips.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use PHENIPS — model.phenips.apply","text":"following, basic functioning PHENIPS explained. Onset: onset triggered degree days maximum temperature reach specific threshold maximum temperature exceeds minimum flight temperature. Development: beetles develop according slightly modified version optimum curve described Wermelinger Seifert (1998)  depending bark temperature. bark temperature modeled based mean maximum temperature, global radiation sun exposure. new generation emerge last generation fully developed maximum temperature exceeds minimum flight temperature. Diapause: diapause initiated daylength falls threshold. Mortality: White stages (egg pupa) die fixed date. Look find model parameters affect actual calculations values used default.","code":""},{"path":"/reference/model.phenips.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use PHENIPS — model.phenips.apply","text":"Baier P, Pennerstorfer J, Schopf (2007). “PHENIPS—comprehensive phenology model Ips typographus (L.)(Col., Scolytinae) tool hazard rating bark beetle infestation.” Forest Ecology Management, 249(3), 171--186. doi:10.1016/j.foreco.2007.05.020 . Wermelinger B, Seifert M (1998). “Analysis temperature dependent development spruce bark beetle Ips typographus (L) (Col., Scolytidae).” Journal Applied Entomology, 122(1-5), 185-191. doi:10.1111/j.1439-0418.1998.tb01482.x .","code":""},{"path":[]},{"path":"/reference/model.phenips.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize PHENIPS — model.phenips.customize","title":"Customize PHENIPS — model.phenips.customize","text":"page describes parameters can used customize PHENIPS. model developed Baier et al. (2007) . Look find apply model.","code":""},{"path":"/reference/model.phenips.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize PHENIPS — model.phenips.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. dd_onset_threshold Degree days required trigger onset infestation. Additionally, maximum temperature must exceed tfly. tfly Minimum temperature beetles need fly. dd_development_base Base temperature calculate degree days calculating beetles development. dd_total_dev Degree days required generation fully develop dev_start, dev_end Share total development egg development starts juvenile beetle's development ends respectively. Usable development /thresholds account mating, oviposition etc. dev_sister_brood Share total development sister brood established. dev_mortal_min, dev_mortal_max beetles considered white stages (egg, larva, pupa) development exceeds dev_mortal_min subceeds dev_mortal_max. stages, beetles die caused mortality event. NULL means lower/upper threshold defined. topt Temperature optimal development. tlow, tup Temperature /development happens. func_btmean, func_btmax, func_btdiff Functions caclulate effective bark temperature (see Baier et al. 2007 , equations .3 A5). parameter passed SpatRaster: tmean: mean air temperature tmax: maximum air temperature rad: radiation btmax: maximum bark temperature model_end_date Date model ends (development modeled). daylength_dia daylength falls threshold, diapause initiated. mortality_date Date white stages (egg, larva, pupa) die.","code":""},{"path":"/reference/model.phenips.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize PHENIPS — model.phenips.customize","text":"barrks, model() used customize model. following code illustrates parameters available PHENIPS specifies default values.","code":"model(\"phenips\",        # ==== onset ====        dd_onset_start_date = '04-01',       dd_onset_base = 8.3,       dd_onset_threshold = 140,        # ==== onset + development ====        tfly = 16.5,        # ==== development ====        dd_development_base = 8.3,       dd_total_dev = 557,       dev_start = 0,       dev_end = 1,       dev_sister_brood = 0.5,       dev_mortal_min = NULL,       dev_mortal_max = 0.6,        topt = 30.4,       tlow = 8.3,       tup = 38.9,        func_btmean = function(tmean, rad) {         -0.173 + 0.0008518 * rad + 1.054 * tmean       },       func_btmax = function(tmax, rad) {         1.656 + 0.002955 * rad + 0.534 * tmax + 0.01884 * tmax ^ 2       },       func_btdiff = function(btmax) {         (-310.667 + 9.603 * btmax) / 24       },        model_end_date = '10-31',        # ==== diapause ====        daylength_dia = 14.5,        # ==== mortality ====        mortality_date = '10-31' )"},{"path":"/reference/model.phenips.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize PHENIPS — model.phenips.customize","text":"Baier P, Pennerstorfer J, Schopf (2007). “PHENIPS—comprehensive phenology model Ips typographus (L.)(Col., Scolytinae) tool hazard rating bark beetle infestation.” Forest Ecology Management, 249(3), 171--186. doi:10.1016/j.foreco.2007.05.020 .","code":""},{"path":[]},{"path":"/reference/model.phenips_clim.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use PHENIPS-Clim — model.phenips_clim.apply","title":"Use PHENIPS-Clim — model.phenips_clim.apply","text":"page describes usage PHENIPS-Clim phenology(). model specific inputs listed basic functionality explained. PHENIPS-Clim published yet. manual updated publication available. parametrized Ips typographus southern Germany.","code":""},{"path":"/reference/model.phenips_clim.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use PHENIPS-Clim — model.phenips_clim.apply","text":"... See phenology() detailled description function. See phenology() details. tmin, tmean, tmax Daily minimum/mean/maximum temperatures °C. tmin optional. available used calculate temperature amplitude. , (tmax - tmean) * 2 used amplitude. rad Daily radiation W * h / m^2. daylength Length day hours. Can created create_daylength_rst() create_daylength_rst(). sister_broods Set FALSE disable calculation sister broods. scenario Choose scenario use suitable combination parameters specific situations. scenario defines default value value can overwritten specifying value respective parameter. following scenarios available: mean: list(exposure = 'sunny', onset_mode = 0.5, diapause_mode = 'photoperiodic', oviposition_mode = 0.5) max: list(exposure = 'sunny', onset_mode = 0.1, diapause_mode = 'thermal', oviposition_mode = 0.1) exposure Specifies sun exposure. Can 'sunny'(default) 'shaded'. onset_mode Share beetles already infesting trees necessary trigger onset. Must 0.1, 0.5 0.9 customized. oviposition_mode Share beetles finished oviposition trigger beginning development. Must 0.1, 0.5 0.9 customized. diapause_mode Determines diapause initiated. Can one following options: 'photoperiodic': diapause initiated daylength falls specific threshold. 'thermal': diapause initiated logistic model depends daylength maximum temperature. Share beetles already stopped reproducing necessary trigger diapause. Must thermal 'photoperiodic' customized. 'photoperiodic' chosen, diapause controlled daylength threshold (see parameter daylength_dia ).","code":""},{"path":"/reference/model.phenips_clim.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use PHENIPS-Clim — model.phenips_clim.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply PHENIPS-Clim additional parameters available.","code":"phenology(\"phenips-clim\", ..., tmin, tmean, tmax, rad, daylength,           sister_broods = TRUE, scenario = 'max', exposure = NULL,           onset_mode = NULL, oviposition_mode = NULL, diapause_mode = NULL)  # calculate submodels separately phenology(\"phenips-clim\", ..., .submodels = 'onset', tmax, scenario = 'max', onset_mode = NULL) phenology(\"phenips-clim\", ..., .submodels = 'diapause', tmax, daylength, scenario = 'max', diapause_mode = NULL) phenology(\"phenips-clim\", ..., .submodels = 'mortality', tmin) phenology(\"phenips-clim\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmin, tmean, tmax, rad, sister_broods = TRUE,           scenario = 'max', exposure = NULL, oviposition_mode = NULL)"},{"path":"/reference/model.phenips_clim.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use PHENIPS-Clim — model.phenips_clim.apply","text":"following, basic functioning PHENIPS-Clim explained. Onset: base onset triggered logistic model relates maximum temperature respective degree days. Beginning base onset, specific level degree days (depending share individuals accounted )  maximum air temperature must reached trigger actual onset. Development: bark temperature emergence new generations determined according PHENIPS, calculation beetles' development rates refined. Rather implying constant development within day, temperature fluctuations incorporated taking daily temperature amplitude account. Additionally, first part development represents pre-oviposition period appear resulting output. Diapause: diapause can initiated due photoperiod according PHENIPS logistic model depends daylength maximum temperature accounts beetles reproduce even shorter days temperatures favorable. second case, PHENIPS-Clim detects reproductive arrest, due adverse abiotic parameters, actual diapause output can adjusted, conditions improve allow reproduction later season. Mortality: White stages (egg pupa) die minimum temperature falls specific threshold. Look find model parameters affect actual calculations values used default.","code":""},{"path":[]},{"path":"/reference/model.phenips_clim.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize PHENIPS-Clim — model.phenips_clim.customize","title":"Customize PHENIPS-Clim — model.phenips_clim.customize","text":"barrks, model() used customize model. , parameters described can used customize PHENIPS-Clim. model currently unpublished. manual updated soon publication available. Look find apply model.","code":""},{"path":"/reference/model.phenips_clim.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize PHENIPS-Clim — model.phenips_clim.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_base Base temperature calculate degree days trigger onset. onset_func Function SpatRasters tmax (maximum temperature) dd_tmax (degree days maximum temperature) parameters. function return TRUE base onset triggered. See onset_add_dd actual onset infestation. onset_add_dd Vector options calculate actual onset infestation. vector named share beetles already started breeding onset triggered (choose option via phenology(..., onset_mode = [option]) applying model). values specify degree days required starting first positive return value onset_func. tfly Minimum temperature beetles need fly. dd_total_dev Degree days required generation fully develop dev_oviposition Named numeric vector shares total development oviposition finished. vector named share beetles taken account (choose option via phenology(..., oviposition_mode = [option]) applying model). dev_end Share total development juvenile beetle's development ends. Usable development threshold account mating, oviposition etc. dev_sister_brood Share total development, sister brood established. dev_mortal_min, dev_mortal_max beetles considered white stages (egg, larva, pupa) development exceeds dev_mortal_min subceeds dev_mortal_max. stages, beetles die caused mortality event. NULL means lower/upper threshold defined. topt Temperature optimal development. func_btmean, func_btmax, func_btdiff Functions calculate bark temperatures (see Baier et al. 2007 , equations .3 .5). parameter passed SpatRaster: tmean: mean air temperature tmax: maximum air temperature rad: radiation btmax: maximum bark temperature dev_rates Data frame specifies development rates per day depending mean temperature temperature amplitude. Column names mean temperatures row names temperature amplitudes one decimal place. base onset (see onset_func) trigger actual onset. model_end_date Date model ends (development modeled). first_diapause_date Date initiation diapause impossible ('MM-DD'). diapause_thermal_func Function calculate initiation diapause model applied using phenology(..., diapause_mode = 'thermal'). diapause initiated last time function returns TRUE. daylength_dia daylength falls threshold, diapause initiated model applied using phenology(..., diapause_mode = 'photoperiodic'). tlethal Temperature threshold white stages die.","code":""},{"path":"/reference/model.phenips_clim.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize PHENIPS-Clim — model.phenips_clim.customize","text":"barrks, model() used customize model. following code illustrates parameters available PHENIPS-Clim specifies default values.","code":"model(\"phenips-clim\",        # ==== onset ====        dd_onset_start_date = '03-01',       dd_onset_base = 12,       onset_func = function(tmax, dd_tmax) {         0.564071 * tmax + 0.006434 * dd_tmax - 12.37046 > 0       },       onset_add_dd = c('0.1' = 0, '0.5' = 90, '0.9' = 190),        # ==== development ====        tfly = 16.5,        dd_total_dev = 557,        dev_oviposition = c('0.1' = 0.1,                           '0.5' = 0.15,                           '0.9' = 0.26),       dev_end = 1,       dev_sister_brood = 0.3,        dev_mortal_min = NULL,       dev_mortal_max = 0.6,        topt = 30.4,        func_btmean = function(tmean, rad) {         -0.173 + 0.0008518 * rad + 1.054 * tmean       },       func_btmax = function(tmax, rad) {         1.656 + 0.002955 * rad + 0.534 * tmax + 0.01884 * tmax ^ 2       },       func_btdiff = function(tmax) {         (-310.667 + 9.603 * tmax) / 24       },        # dev_rates too large to show here, type `params('phenips-clim')$dev_rates`       # to get the dev_rates that are used by default       # dev_rates = matrix(...),        model_end_date = '12-31',        # ==== diapause ====        first_diapause_date = '08-12',       diapause_thermal_func = function(daylength, tmax) {         0.8619156 * daylength + 0.5081128 * tmax - 23.63691 > 0       },       daylength_dia = 14.5,        # ==== mortality ====        tlethal = -5 )"},{"path":"/reference/model.phenips_clim.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize PHENIPS-Clim — model.phenips_clim.customize","text":"Baier P, Pennerstorfer J, Schopf (2007). “PHENIPS—comprehensive phenology model Ips typographus (L.)(Col., Scolytinae) tool hazard rating bark beetle infestation.” Forest Ecology Management, 249(3), 171--186. doi:10.1016/j.foreco.2007.05.020 .","code":""},{"path":[]},{"path":"/reference/model.rity.apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Use RITY — model.rity.apply","title":"Use RITY — model.rity.apply","text":"page describes usage RITY phenology(). model specific inputs listed basic functionality explained. RITY (also called RITY-2) published Ogris et al. (2019)  parametrized Ips typographus Slovenia.","code":""},{"path":"/reference/model.rity.apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use RITY — model.rity.apply","text":"tmin, tmean, tmax Daily minimum/mean/maximum temperatures °C. development submodel, parameter obligatory depends mode. daylength Length day hours. Can created create_daylength_rst() create_daylength_rst(). mode Specifies temperature used calculate development. Can min, mean max. .submodels, .onset, .diapause, .mortality, ... See phenology() detailled description function.","code":""},{"path":"/reference/model.rity.apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use RITY — model.rity.apply","text":"function returns phenology. Look find can analysed.","code":""},{"path":"/reference/model.rity.apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use RITY — model.rity.apply","text":"barrks, phenology() used apply model. following code illustrates inputs required apply RITY additional parameters available.","code":"phenology(\"rity\", ..., tmin = NULL, tmean = NULL, tmax, daylength, mode = 'max')  # calculate submodels separately phenology(\"rity\", ..., .submodels = 'onset', tmax) phenology(\"rity\", ..., .submodels = 'diapause', daylength) phenology(\"rity\", ..., .submodels = 'mortality', tmax) phenology(\"rity\", ..., .submodels = 'development',           .onset, .diapause = NULL, .mortality = NULL,           tmin = NULL, tmean = NULL, tmax = NULL, mode = 'max')"},{"path":"/reference/model.rity.apply.html","id":"functioning","dir":"Reference","previous_headings":"","what":"Functioning","title":"Use RITY — model.rity.apply","text":"following, basic functioning RITY explained. Onset: See PHENIPS. Development: Based PHENIPS modifications: optimum curve calculated according Wermelinger Seifert (1998)  without simplification. minimum, mean maximum bark temperature can used calculate development. temperatures depend respective air temperatures. Diapause: See PHENIPS. Mortality: See PHENIPS. Look find model parameters affect actual calculations values used default.","code":""},{"path":"/reference/model.rity.apply.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use RITY — model.rity.apply","text":"Ogris N, Ferlan M, Hauptman T, Pavlin R, Kavčič , Jurc M, De Groot M (2019). “RITY--phenology model Ips typographus tool optimization monitoring.” Ecological Modelling, 410, 108775. doi:10.1016/j.ecolmodel.2019.108775 . Wermelinger B, Seifert M (1998). “Analysis temperature dependent development spruce bark beetle Ips typographus (L) (Col., Scolytidae).” Journal Applied Entomology, 122(1-5), 185-191. doi:10.1111/j.1439-0418.1998.tb01482.x .","code":""},{"path":[]},{"path":"/reference/model.rity.customize.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize RITY — model.rity.customize","title":"Customize RITY — model.rity.customize","text":"page describes parameters can used customize RITY (also called RITY-2). model developed Ogris et al. (2019) . Look find apply model.","code":""},{"path":"/reference/model.rity.customize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize RITY — model.rity.customize","text":"dd_onset_start_date date, degree days start sum ('MM-DD'). dd_onset_threshold Degree days required trigger onset infestation. Additionally, maximum temperature must exceed tfly. tfly Minimum temperature beetles need fly. dd_onset_base Base temperature calculate degree days development. dd_total_dev Degree days required generation fully develop dev_start, dev_end Share total development egg development starts juvenile beetle's development ends respectively. Usable development /thresholds account mating, oviposition etc. dev_sister_brood Share total development, sister brood established. dev_mortal_min, dev_mortal_max beetles considered white stages (egg, larva, pupa) development exceeds dev_mortal_min subceeds dev_mortal_max. stages, beetles die caused mortality event. NULL means lower/upper threshold defined. func_ftmean, func_ftmax, func_atdiff Functions caclulate air temperature forest stands (see Ogris et al. 2019 , equations 1 - 3). parameter passed SpatRaster: tmin: min air temperature tmean: mean air temperature tmax: maximum air temperature func_btmean, func_btmax, func_btdiff Functions caclulate bark temperature (see Ogris et al. 2019 , equations 4 - 6). parameter passed SpatRaster: ftmin: min air temperature forest stands ftmean: mean air temperature forest stands ftmax: maximum air temperature forest stands dt_low, dt_up, topt, tmax, alpha, beta, gamma Parameters calculate effective bark temperature (see Ogris et al. 2019 , equations 7 - 9). model_end_date Date model ends (development modeled). daylength_dia daylength falls threshold, diapause initiated. mortality_date Date white stages (egg, larva, pupa) die.","code":""},{"path":"/reference/model.rity.customize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize RITY — model.rity.customize","text":"barrks, model() used customize model. following code illustrates parameters available RITY specifies default values.","code":"model(\"rity\",        # ==== onset ====        dd_onset_start_date = '03-07',       dd_onset_base = 8.3,       dd_onset_threshold = 155.6,        # ==== onset + development ====        tfly = 14.5,        # ==== development ====        dd_development_base = 8.3,       dd_total_dev = 557,       dev_start = 0,       dev_end = 1,       dev_sister_brood = 0.5,       dev_mortal_min = NULL,       dev_mortal_max = 0.6,        func_ftmin = function(tmin) { 1.44 + 0.82 * tmin },       func_ftmean = function(tmean) { 0.50 + 0.81 * tmean },       func_ftmax = function(tmax) { 1.03 + 0.86 * tmax },        func_btmin = function(ftmin) { 0.56 + 0.99 * ftmin },       func_btmean = function(ftmean) { -0.48 + 1.03 * ftmean },       func_btmax = function(ftmax) { 0.03 + 0.99 * ftmax },        dt_low = 8.3,       dt_up = 38.9,       topt = 30.4,       tmax = 40.9958913,       alpha = 0.02876507,       beta = 3.5922336,       gamma = 1.24657367,        model_end_date = '10-31',        # ==== diapause ====        daylength_dia = 14.5,        # ==== mortality ====        mortality_date = '10-31' )"},{"path":"/reference/model.rity.customize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Customize RITY — model.rity.customize","text":"Ogris N, Ferlan M, Hauptman T, Pavlin R, Kavčič , Jurc M, De Groot M (2019). “RITY--phenology model Ips typographus tool optimization monitoring.” Ecological Modelling, 410, 108775. doi:10.1016/j.ecolmodel.2019.108775 .","code":""},{"path":[]},{"path":"/reference/model_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different (sub-)models — model_combine","title":"Combine different (sub-)models — model_combine","text":"Combine different (sub-)models.","code":""},{"path":"/reference/model_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different (sub-)models — model_combine","text":"","code":"model_combine(...)"},{"path":"/reference/model_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different (sub-)models — model_combine","text":"... Phenology models, model names lists keys model submodels. last case, submodels specified used (one 'onset', 'diapause', 'mortality' 'development') respective model. multiple models supplied submodel, last one overwrites others.","code":""},{"path":"/reference/model_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different (sub-)models — model_combine","text":"phenology model. Can passed phenology().","code":""},{"path":[]},{"path":"/reference/model_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine different (sub-)models — model_combine","text":"","code":"# \\donttest{ # combine PHENIPS with the diapause submodel of PHENIPS-Clim m <- model_combine('phenips',                    list(model = 'phenips-clim', submodels = 'diapause'))  # calculate phenology p <- phenology(m, barrks_data(), .quiet = TRUE)  # plot calculated generations gens <- get_generations_rst(p) terra::plot(gens)  # }"},{"path":"/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model parameters — params","title":"Get model parameters — params","text":"Get model parameters","code":""},{"path":"/reference/params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model parameters — params","text":"","code":"params(m, ...)"},{"path":"/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model parameters — params","text":"m Name model return value another model()-call. ... List parameters customize model.","code":""},{"path":"/reference/params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get model parameters — params","text":"","code":"# print the first parameters of `phenips-clim` head(params('phenips-clim')) #> $dd_onset_start_date #> [1] \"03-01\" #>  #> $dd_onset_base #> [1] 12 #>  #> $onset_func #> \\(tmax, dd_tmax) 0.564071 * tmax + 0.006434 * dd_tmax - 12.37046 > 0 #> <environment: namespace:barrks> #>  #> $onset_add_dd #> 0.1 0.5 0.9  #>   0  90 190  #>  #> $model_end_date #> [1] \"12-31\" #>  #> $tfly #> [1] 16.5 #>"},{"path":"/reference/phenology.html","id":null,"dir":"Reference","previous_headings":"","what":"Central function to calculate a phenology — phenology","title":"Central function to calculate a phenology — phenology","text":"Calculate phenology (subparts) specific model.","code":""},{"path":"/reference/phenology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Central function to calculate a phenology — phenology","text":"","code":"phenology(   .model,   .data = NULL,   .dates = NULL,   .win = NULL,   .ext = \"tif\",   .onset = NULL,   .diapause = NULL,   .mortality = NULL,   .submodels = c(\"onset\", \"diapause\", \"mortality\", \"development\"),   .setup_only = FALSE,   .stations = NULL,   .storage = NULL,   .quiet = FALSE,   ... )  bso_phenology(   .model = \"bso\",   .data = NULL,   .dates = NULL,   .win = NULL,   .ext = \"tif\",   .onset = NULL,   .diapause = NULL,   .mortality = NULL,   .submodels = c(\"onset\", \"diapause\", \"mortality\", \"development\"),   .setup_only = FALSE,   .stations = NULL,   .storage = NULL,   .quiet = FALSE,   ... )"},{"path":"/reference/phenology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Central function to calculate a phenology — phenology","text":".model phenology model model name (see model(), model_combine()). .data Data passed model. can one following: Character string: raster data loaded path specified. files named like respective model inputs. Named list: element contains input data according name. Data frame (station data): columns date station (name station). Additional columns named like respective model inputs. Additionally, data can passed ... argument. Look model application manuals find inputs required specific model: model.bso.apply, model.phenips.apply, model.rity.apply, model.chapy.apply, model.joensson.apply, model.lange.apply, model.phenips_clim.apply. .dates Vector dates data restricted . .win SpatExtent set window (area interest) .data path load raster data . .ext Extension files used .data path load raster data . .onset, .diapause, .mortality Pass custom precalculated phenological events model. See create_events find create events manually. Alternatively, return value get_onset_rst(), get_diapause_rst() get_mortality_rst() used (as_doy = FALSE) extract respective phenological event another phenology. case, phenology must match temporal spatial extent inputs. .submodels Character vector. Specifies submodels calculated. Can subset c('onset', 'diapause', 'mortality', 'development'). .setup_only TRUE inputs preprocessed without calculating submodels. preprocessed data can used input phenology() calls can accessed via get_input_data(). .stations Assign stations phenology. See stations_create() details. .storage set, path specified used save (intermediate) results. phenology() called successively growing amount data, calculations continue stopped. can save calculation time especially large raster inputs. Note work raster inputs terra::sources() empty. Otherwise results calculations saved successive calculations possible. input data passed, phenology loaded storage. .quiet TRUE, messages suppressed. ... Parameters passed model. Must named according model inputs. See .data alternative ways pass data model.","code":""},{"path":"/reference/phenology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Central function to calculate a phenology — phenology","text":"phenology list. Look find phenology can analysed. recommended access list elements directly.","code":""},{"path":"/reference/phenology.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Central function to calculate a phenology — phenology","text":"bso_phenology(): BSO model works bit different models, seperate phenology function implemented model. Note onset development submodels needed taken BSO model, diapause mortality submodels compatible models. function returns BSO phenology list. Look find BSO phenology can analysed. recommended access list elements directly. able use functions available phenology objects returned phenology(), call bso_translate_phenology().","code":""},{"path":[]},{"path":"/reference/phenology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Central function to calculate a phenology — phenology","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data()) #>  #> === calculate phenology with model `phenips-clim` === #>  #> -- setup -- #> parameter dd_onset #> parameter btmean #> parameter btmax #> parameter teff #> > calculate amplitude #> > get effective temperature from temperature/amplitude #> parameter fly #>  #> -- onset -- #> > calculate the base onset #> > add 0 degree days to get the onset of the first 10 % beetles #>  #> -- diapause -- #>  #> -- mortality -- #>  #> -- development -- #> > generation 1 #> > generation 2  # plot calculated generations gens <- get_generations_rst(p) terra::plot(gens)  # }"},{"path":"/reference/plot_development_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a development diagram — plot_development_diagram","title":"Plot a development diagram — plot_development_diagram","text":"development diagram illustrates beetles' development appearing generations within year.","code":""},{"path":"/reference/plot_development_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a development diagram — plot_development_diagram","text":"","code":"plot_development_diagram(   .phenos,   .station = prop_stations(.phenos[[1]])[1],   .generations = NULL,   .colors = barrks_colors(\"diagram_lines\"),   .fill = barrks_colors(\"diagram_fill\"),   .labels = barrks_labels(\"diagram\"),   .legend_col = TRUE,   .legend_lty = TRUE,   .group = TRUE,   .minmax_only = FALSE,   .fun_bg = NULL,   .lty = \"solid\",   .lwd = 2,   .date_split = NULL,   .date_stop = NULL,   .lty2 = \"dotted\",   .lwd2 = 2,   .fill2 = NA,   ... )"},{"path":"/reference/plot_development_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a development diagram — plot_development_diagram","text":".phenos List (named) phenology objects single phenology plotted (see phenology()). .station Pass character vector choose station assigned pheno name, pass different station. See stations_create() details. .generations Generations shown. .colors, .fill, .labels Character vectors. Change line colors, fill labels generations starting first generation followed consecutively elements generations (including sister broods). .legend_col, .legend_lty Manipulate appearance legends colors line types. Pass TRUE/FALSE enable/disable respective legend. customization respective legend, list parameters graphics::legend can passed. .group Select phenology objects used draw filling. can character vector phenology names, integer vector phenology numbers, TRUE phenology objects used. .minmax_only TRUE, minimum maximum development line plotted. .fun_bg Function draw background. .lty, .lwd Use specific line types line widths. Vectors length .phenos assign values respective phenology. .date_split, .lty2, .lwd2, .fill2 .date_split reached, appearance plot change according respective values. .date_stop specified, data plotted respective date. ... Parameters passed base::plot().","code":""},{"path":"/reference/plot_development_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a development diagram — plot_development_diagram","text":"None","code":""},{"path":[]},{"path":"/reference/plot_development_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a development diagram — plot_development_diagram","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data('stations'), .quiet = TRUE)  # plot development diagram of the station 'Mannheim' plot_development_diagram(p, 'Mannheim', .lwd = 4)  # }"},{"path":"/reference/properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Get phenology properties — properties","title":"Get phenology properties — properties","text":"examine phenology, different functions query properties.","code":""},{"path":"/reference/properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get phenology properties — properties","text":"","code":"## get the year the phenology was calculated for prop_year(pheno)  ## get all dates that are covered by the phenology prop_dates(pheno)  ## get the first date that is covered by the phenology prop_first_date(pheno)  ## get the last date that is covered by the phenology prop_last_date(pheno)  ## get all hatched generations as numeric vector prop_hatched_generations(pheno)  ## get all hatched filial generations as numeric vector prop_filial_generations(pheno)  ## get all hatched sister broods as numeric vector prop_sister_broods(pheno)  ## get the stations assigned to the phenology prop_stations(pheno)"},{"path":"/reference/properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get phenology properties — properties","text":"pheno  phenology (see phenology())","code":""},{"path":"/reference/properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get phenology properties — properties","text":"requested property.","code":""},{"path":"/reference/properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get phenology properties — properties","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data(), .quiet = TRUE)  # print all generations that were hatched prop_hatched_generations(p) #> [1] 1.0 1.5 2.0 2.5 # }"},{"path":"/reference/save_load_phenology.html","id":null,"dir":"Reference","previous_headings":"","what":"Save/load a phenology — save_phenology","title":"Save/load a phenology — save_phenology","text":"Saves/loads phenology /path.","code":""},{"path":"/reference/save_load_phenology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save/load a phenology — save_phenology","text":"","code":"save_phenology(   pheno,   .storage,   .submodels = c(\"onset\", \"diapause\", \"mortality\", \"development\"),   .overwrite = FALSE,   .ext = \".tif\",   .quiet = FALSE )  load_phenology(   .storage,   .submodels = c(\"onset\", \"diapause\", \"mortality\", \"development\"),   .ext = \".tif\",   .quiet = FALSE )"},{"path":"/reference/save_load_phenology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save/load a phenology — save_phenology","text":"pheno phenology, calculated phenology(). .storage Path save/load phenology. .submodels submodels saved/loaded. .overwrite existing storage overwritten? .ext Extension raster files. .quiet TRUE, messages suppressed.","code":""},{"path":"/reference/save_load_phenology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save/load a phenology — save_phenology","text":"save_phenology(): None load_phenology(): phenology list. Look find phenology can analysed. recommended access list elements directly.","code":""},{"path":"/reference/save_load_phenology.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Save/load a phenology — save_phenology","text":"save_phenology(): Saves phenology path. load_phenology(): Loads phenology path.","code":""},{"path":"/reference/save_load_phenology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save/load a phenology — save_phenology","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data(), .quiet = TRUE)  # choose path to save the phenology path <- file.path(tempdir(), 'pheno')  # save phenology save_phenology(p, path, .overwrite = TRUE, .quiet = TRUE)   ###  # load phenology from path p2 <- load_phenology(path, .quiet = TRUE)  # plot generations gens <- get_generations_rst(p2) terra::plot(gens)  # }"},{"path":"/reference/stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Work with stations — stations_create","title":"Work with stations — stations_create","text":"barrks, stations references specific raster cells. Thus, can used extract point-related data phenology. Look find station-based functions available analyse phenology.","code":""},{"path":"/reference/stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work with stations — stations_create","text":"","code":"stations_create(station_names, cells)  stations_assign(pheno, stations)  stations_names(stations)  stations_cells(stations)"},{"path":"/reference/stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Work with stations — stations_create","text":"station_names Character vector specifies names stations. cells Numbers cells represented stations. pheno  phenology (see phenology()) stations Stations created stations_create() obtained prop_stations().","code":""},{"path":"/reference/stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work with stations — stations_create","text":"stations_create(): named numeric vector. stations_assign(): phenology object (see phenology()). stations_names(): character vector. stations_cells(): numeric vector.","code":""},{"path":"/reference/stations.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Work with stations — stations_create","text":"stations_create(): Create stations. stations_assign(): Assign stations phenology. Returns phenology passed respective stations assigned. stations_names(): Get names stations. stations_cells(): Get raster cells stations.","code":""},{"path":"/reference/stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Work with stations — stations_create","text":"","code":"# \\donttest{ # calculate phenology p <- phenology('phenips-clim', barrks_data(), .quiet = TRUE)  # create stations and assign them to the phenology object stations <- stations_create(c('station a', 'station b'),                             c(234, 345)) p <- stations_assign(p, stations)  # plot the development of 'station b' plot_development_diagram(p, 'station b', .lwd = 4)  # }"},{"path":[]},{"path":"/TODO.html","id":"general","dir":"","previous_headings":"","what":"General","title":"TODO","text":"Implement argument checks Add examples function documentations (e.g. model_combine()) create_daylength_...(): switch suncalc geosphere (less dependencies…) Make output create_suntimes_...() create_daylength_...() consistent (minutes hours) Define BarrksPheno (similar) class Make order input raster layers irrelevant (use date) phenology(): rasters .storage used even though .dates NULL Fill incomplete generations: yes/plot_development_diagram(): Adjust legend .minmax_only == TRUE Unify status messages (print temporary ?) Make storage messages optional Improve performance create_suntimes_df()","code":""},{"path":"/TODO.html","id":"models","dir":"","previous_headings":"","what":"Models","title":"TODO","text":"Implement original daylength function? Define functions bso_save_phenology() bso_load_phenology() Enable application mortality bso_plot_flight_diagram()/bso_plot_stage_diagram(): make x-axis optional Improve performance bso_plot_stage_diagram() Define functions get share individuals flying / specific stage / … Improve performace bso_calc_tphloem() Lange: Improve performance Improve performance calculation development rates Allow custom intervals function dev_rates","code":""},{"path":"/TODO.html","id":"formal-testing","dir":"","previous_headings":"","what":"Formal testing","title":"TODO","text":"BSO: storage, sister breeders load_phenology()/save_phenology","code":""},{"path":"/TODO.html","id":"design","dir":"","previous_headings":"","what":"Design","title":"TODO","text":"Package logo Use DTM vignette ‘model-comparison’ barrks_colors('bso_flight') appropriate?","code":""},{"path":"/news/index.html","id":"barrks-100","dir":"Changelog","previous_headings":"","what":"barrks 1.0.0","title":"barrks 1.0.0","text":"Initial CRAN submission.","code":""}]
